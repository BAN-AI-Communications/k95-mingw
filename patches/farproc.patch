diff -Nruiw src.orig/cknprt.c src.farproc/cknprt.c
--- src.orig/cknprt.c	2006-04-04 17:28:31.000000000 -0400
+++ src.farproc/cknprt.c	2013-11-19 22:27:43.099128153 -0500
@@ -256,7 +256,7 @@
         if ( hWinSpool == INVALID_HANDLE_VALUE )
             hWinSpool = LoadLibrary("winspool.drv");
         if ( hWinSpool != INVALID_HANDLE_VALUE )
-            (FARPROC) p_GetDefaultPrinter =
+             p_GetDefaultPrinter =
                 GetProcAddress( hWinSpool, "GetDefaultPrinterA" );
     }
 
diff -Nruiw src.orig/ckntap.c src.farproc/ckntap.c
--- src.orig/ckntap.c	2011-07-19 17:04:29.000000000 -0400
+++ src.farproc/ckntap.c	2013-11-19 22:27:43.110128153 -0500
@@ -171,206 +171,206 @@
       return FALSE;
    }
 
-   if (((FARPROC) cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
+   if (( cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
+   if (( cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
+   if (( cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
+   if (( cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
+   if (( cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
+   if (( cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
+   if (( cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
+   if (( cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-    if (((FARPROC) cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
+    if (( cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
+    if (( cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
+    if (( cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
+    if (( cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
+   if (( cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
+   if (( cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
+   if (( cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
+   if (( cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-    if (((FARPROC) cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
+    if (( cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
+    if (( cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineTranslateAddress =
+    if (( cklineTranslateAddress =
           GetProcAddress( hLib, "lineTranslateAddress" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetCountry =
+    if (( cklineGetCountry =
           GetProcAddress( hLib, "lineGetCountry" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetLineDevStatus =
+    if (( cklineGetLineDevStatus =
           GetProcAddress( hLib, "lineGetLineDevStatus" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetDevConfig =
+    if (( cklineGetDevConfig =
           GetProcAddress( hLib, "lineGetDevConfig" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineSetDevConfig =
+    if (( cklineSetDevConfig =
           GetProcAddress( hLib, "lineSetDevConfig" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineHandoff =
+    if (( cklineHandoff =
           GetProcAddress( hLib, "lineHandoff" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineSetCallPrivilege =
+    if (( cklineSetCallPrivilege =
           GetProcAddress( hLib, "lineSetCallPrivilege" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetCallInfo =
+    if (( cklineGetCallInfo =
           GetProcAddress( hLib, "lineGetCallInfo" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineMonitorMedia =
+    if (( cklineMonitorMedia =
           GetProcAddress( hLib, "lineMonitorMedia" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetAppPriority =
+    if (( cklineGetAppPriority =
           GetProcAddress( hLib, "lineGetAppPriority" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineSetAppPriority =
+    if (( cklineSetAppPriority =
           GetProcAddress( hLib, "lineSetAppPriority" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineGetNumRings =
+    if (( cklineGetNumRings =
           GetProcAddress( hLib, "lineGetNumRings" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineSetNumRings =
+    if (( cklineSetNumRings =
           GetProcAddress( hLib, "lineSetNumRings" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
         return FALSE;
     }
-    if (((FARPROC) cklineSetCallParams =
+    if (( cklineSetCallParams =
           GetProcAddress( hLib, "lineSetCallParams" )) == NULL )
     {
         rc = GetLastError() ;
diff -Nruiw src.orig/ckntel.c src.farproc/ckntel.c
--- src.orig/ckntel.c	2011-07-19 17:04:45.000000000 -0400
+++ src.farproc/ckntel.c	2013-11-19 22:27:43.112128153 -0500
@@ -71,73 +71,73 @@
       return FALSE;
    }
 
-   if (((FARPROC) cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
+   if (( cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
+   if (( cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
+   if (( cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
+   if (( cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
+   if (( cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
+   if (( cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
+   if (( cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
+   if (( cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
+   if (( cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
+   if (( cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
+   if (( cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
+   if (( cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
diff -Nruiw src.orig/ckoath.c src.farproc/ckoath.c
--- src.orig/ckoath.c	2011-07-19 17:06:05.000000000 -0400
+++ src.farproc/ckoath.c	2013-11-19 22:27:43.130128154 -0500
@@ -3678,47 +3678,47 @@
 {
 #ifdef NT
     if ( !strcmp(name,"encrypt_parse") )
-        (FARPROC) p_encrypt_parse = (FARPROC) func;
+         p_encrypt_parse =  func;
     else if ( !strcmp(name,"encrypt_init") )
-        (FARPROC) p_encrypt_init = (FARPROC) func;
+         p_encrypt_init =  func;
     else if ( !strcmp(name,"encrypt_session_key") )
-        (FARPROC) p_encrypt_session_key = (FARPROC) func;
+         p_encrypt_session_key =  func;
     else if ( !strcmp(name,"encrypt_dont_support") )
-        (FARPROC) p_encrypt_dont_support = (FARPROC) func;
+         p_encrypt_dont_support =  func;
     else if ( !strcmp(name,"encrypt_send_request_start") )
-        (FARPROC) p_encrypt_send_request_start = (FARPROC) func;
+         p_encrypt_send_request_start =  func;
     else if ( !strcmp(name,"encrypt_request_start") )
-        (FARPROC) p_encrypt_request_start = (FARPROC) func;
+         p_encrypt_request_start =  func;
     else if ( !strcmp(name,"encrypt_send_request_end") )
-        (FARPROC) p_encrypt_send_request_end = (FARPROC) func;
+         p_encrypt_send_request_end =  func;
     else if ( !strcmp(name, "encrypt_send_end") )
-        (FARPROC) p_encrypt_send_end = (FARPROC) func;
+         p_encrypt_send_end =  func;
     else if ( !strcmp(name,"encrypt_send_support") )
-        (FARPROC) p_encrypt_send_support = (FARPROC) func;
+         p_encrypt_send_support =  func;
     else if ( !strcmp(name,"encrypt_is_encrypting") )
-        (FARPROC) p_encrypt_is_encrypting = (FARPROC) func;
+         p_encrypt_is_encrypting =  func;
     else if ( !strcmp(name,"encrypt_is_decrypting") )
-        (FARPROC) p_encrypt_is_decrypting = (FARPROC) func;
+         p_encrypt_is_decrypting =  func;
     else if ( !strcmp(name,"get_crypt_table") )
-        (FARPROC) p_get_crypt_table = (FARPROC) func;
+         p_get_crypt_table =  func;
     else if ( !strcmp(name,"des_is_weak_key") )
-        (FARPROC) p_des_is_weak_key = (FARPROC) func;
+         p_des_is_weak_key =  func;
     else if ( !strcmp(name,"libdes_random_key") )
-        (FARPROC) libdes_random_key = (FARPROC) func;
+         libdes_random_key =  func;
     else if ( !strcmp(name,"libdes_random_seed") )
-        (FARPROC) libdes_random_seed = (FARPROC) func;
+         libdes_random_seed =  func;
     else if ( !strcmp(name,"libdes_key_sched") )
-        (FARPROC) libdes_key_sched = (FARPROC) func;
+         libdes_key_sched =  func;
     else if ( !strcmp(name,"libdes_ecb_encrypt") )
-        (FARPROC) libdes_ecb_encrypt = (FARPROC) func;
+         libdes_ecb_encrypt =  func;
     else if ( !strcmp(name,"libdes_string_to_key") )
-        (FARPROC) libdes_string_to_key = (FARPROC) func;
+         libdes_string_to_key =  func;
     else if ( !strcmp(name,"libdes_fixup_key_parity") )
-        (FARPROC) libdes_fixup_key_parity = (FARPROC) func;
+         libdes_fixup_key_parity =  func;
     else if ( !strcmp(name,"libdes_pcbc_encrypt") )
-        (FARPROC) libdes_pcbc_encrypt = (FARPROC) func;
+         libdes_pcbc_encrypt =  func;
     else if ( !strcmp(name,"crypt_dll_version") )
-        (FARPROC) p_crypt_dll_version = (FARPROC) func;
+         p_crypt_dll_version =  func;
 #else /* NT */
     if ( !strcmp(name,"encrypt_parse") )
         p_encrypt_parse = (PFN*) func;
@@ -3860,7 +3860,7 @@
         debug(F101, "K95 Crypt LoadLibrary failed","",rc) ;
         return(0);
     } else {
-        if (((FARPROC) p_crypt_dll_init =
+        if (( p_crypt_dll_init =
               GetProcAddress( hCRYPT, "crypt_dll_init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4148,7 +4148,7 @@
 
     /* when we define UNICODE we must load the Unicode version of this function */
 
-    if (((FARPROC) p_SSPI_InitSecurityInterface =
+    if (( p_SSPI_InitSecurityInterface =
           GetProcAddress( hSSPI, "InitSecurityInterfaceA" )) == NULL )
     {
         rc = GetLastError() ;
@@ -5910,7 +5910,7 @@
     }
     if (hKRB4_32) {
         debug(F100,"Kerberos IV support provided by MIT Leash","",0);
-        if (((FARPROC) p_krb_get_err_text_entry =
+        if (( p_krb_get_err_text_entry =
               GetProcAddress( hKRB4_32, "get_krb_err_txt_entry" )) == NULL )
         {
             rc = GetLastError() ;
@@ -5918,28 +5918,28 @@
                   "Kerberos GetProcAddress failed","get_krb_err_txt_entry",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_krb_get_cred =
+        if (( p_krb_get_cred =
               GetProcAddress( hKRB4_32, "krb_get_cred" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","krb_get_cred",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_mk_req =
+        if (( p_krb_mk_req =
               GetProcAddress( hKRB4_32, "krb_mk_req" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","krb_mk_req",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_realmofhost =
+        if (( p_krb_realmofhost =
               GetProcAddress( hKRB4_32, "krb_realmofhost" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"Kerberos GetProcAddress failed","krb_realmofhost",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_krb_get_phost =
+        if (( p_krb_get_phost =
               GetProcAddress( hKRB4_32, "krb_get_phost" )) == NULL )
         {
             rc = GetLastError() ;
@@ -5950,32 +5950,32 @@
         /* The DES functions are not required.  But if we do not have */
         /* them and do not have the CRYPT DLL we will not be able to  */
         /* perform mutual authentication.                             */
-        if (((FARPROC) p_k4_des_ecb_encrypt =
+        if (( p_k4_des_ecb_encrypt =
               GetProcAddress( hKRB4_32, "des_ecb_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"Kerberos GetProcAddress failed","des_ecb_encrypt",rc);
         }
-        if (((FARPROC) p_k4_des_pcbc_encrypt =
+        if (( p_k4_des_pcbc_encrypt =
               GetProcAddress( hKRB4_32, "des_pcbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"Kerberos GetProcAddress failed","des_pcbc_encrypt",rc);
         }
-        if (((FARPROC) p_k4_des_new_random_key =
+        if (( p_k4_des_new_random_key =
               GetProcAddress( hKRB4_32, "des_new_random_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,
                   "Kerberos GetProcAddress failed","des_new_random_key",rc) ;
         }
-        if (((FARPROC) p_k4_des_key_sched =
+        if (( p_k4_des_key_sched =
               GetProcAddress( hKRB4_32, "des_key_sched" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","des_key_sched",rc) ;
         }
-        if (((FARPROC) p_k4_des_set_random_generator_seed =
+        if (( p_k4_des_set_random_generator_seed =
              GetProcAddress(hKRB4_32,"des_set_random_generator_seed")) == NULL)
         {
             rc = GetLastError() ;
@@ -5983,7 +5983,7 @@
                    "des_set_random_generator_seed",rc) ;
         }
 
-        if (((FARPROC) p_krb_get_pw_in_tkt =
+        if (( p_krb_get_pw_in_tkt =
               GetProcAddress( hKRB4_32, "krb_get_pw_in_tkt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -5992,14 +5992,14 @@
             load_error = 1;
         }
         /* Not supported in Leash */
-        if (((FARPROC) p_krb_get_pw_in_tkt_preauth =
+        if (( p_krb_get_pw_in_tkt_preauth =
              GetProcAddress( hKRB4_32, "krb_get_pw_in_tkt_preauth" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb_get_pw_in_tkt_preauth",rc) ;
         }
-        if (((FARPROC) p_krb_get_lrealm =
+        if (( p_krb_get_lrealm =
               GetProcAddress( hKRB4_32, "krb_get_lrealm" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6007,14 +6007,14 @@
                    "krb_get_lrealm",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_get_err_text =
+        if (( p_krb_get_err_text =
               GetProcAddress( hKRB4_32, "krb_get_err_text" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb_get_err_text",rc) ;
         }
-        if (((FARPROC) p_kname_parse =
+        if (( p_kname_parse =
               GetProcAddress( hKRB4_32, "kname_parse" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6022,7 +6022,7 @@
                    "kname_parse",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_dest_tkt =
+        if (( p_dest_tkt =
               GetProcAddress( hKRB4_32, "dest_tkt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6030,7 +6030,7 @@
                    "dest_tkt",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_get_tf_realm =
+        if (( p_krb_get_tf_realm =
               GetProcAddress( hKRB4_32, "krb_get_tf_realm" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6038,7 +6038,7 @@
                    "krb_get_tf_realm",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_get_tf_fullname =
+        if (( p_krb_get_tf_fullname =
               GetProcAddress( hKRB4_32, "krb_get_tf_fullname" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6046,7 +6046,7 @@
                    "krb_get_tf_fullname",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tf_get_pname =
+        if (( p_tf_get_pname =
               GetProcAddress( hKRB4_32, "tf_get_pname" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6054,7 +6054,7 @@
                    "tf_get_pname",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tf_get_pinst =
+        if (( p_tf_get_pinst =
               GetProcAddress( hKRB4_32, "tf_get_pinst" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6062,7 +6062,7 @@
                    "tf_get_pinst",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tf_get_cred =
+        if (( p_tf_get_cred =
               GetProcAddress( hKRB4_32, "tf_get_cred" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6070,7 +6070,7 @@
                    "tf_get_cred",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tf_close =
+        if (( p_tf_close =
               GetProcAddress( hKRB4_32, "tf_close" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6078,7 +6078,7 @@
                    "tf_close",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tf_init =
+        if (( p_tf_init =
               GetProcAddress( hKRB4_32, "tf_init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6086,7 +6086,7 @@
                    "tf_init",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_tkt_string =
+        if (( p_tkt_string =
               GetProcAddress( hKRB4_32, "tkt_string" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6094,7 +6094,7 @@
                    "tkt_string",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_check_serv =
+        if (( p_krb_check_serv =
               GetProcAddress( hKRB4_32, "krb_check_serv" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6102,28 +6102,28 @@
                    "krb_check_serv",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_kuserok =
+        if (( p_kuserok =
               GetProcAddress( hKRB4_32, "kuserok" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "kuserok",rc) ;
         }
-        if (((FARPROC) p_krb_kntoln =
+        if (( p_krb_kntoln =
               GetProcAddress( hKRB4_32, "krb_kntoln" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb_kntoln",rc) ;
         }
-        if (((FARPROC) p_krb_rd_req =
+        if (( p_krb_rd_req =
               GetProcAddress( hKRB4_32, "krb_rd_req" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb_rd_req",rc) ;
         }
-        if (((FARPROC) p_krb_sendauth =
+        if (( p_krb_sendauth =
               GetProcAddress( hKRB4_32, "krb_sendauth" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6131,21 +6131,21 @@
                    "krb_sendauth",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_set_krb_debug =
+        if (( p_set_krb_debug =
               GetProcAddress( hKRB4_32, "set_krb_debug" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "set_krb_debug",rc) ;
         }
-        if (((FARPROC) p_set_krb_ap_req_debug =
+        if (( p_set_krb_ap_req_debug =
               GetProcAddress( hKRB4_32, "set_krb_ap_req_debug" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "set_krb_ap_req_debug",rc) ;
         }
-        if (((FARPROC) p_krb_mk_safe =
+        if (( p_krb_mk_safe =
               GetProcAddress( hKRB4_32, "krb_mk_safe" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6153,7 +6153,7 @@
                    "krb_mk_safe",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_mk_priv =
+        if (( p_krb_mk_priv =
               GetProcAddress( hKRB4_32, "krb_mk_priv" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6161,7 +6161,7 @@
                    "krb_mk_priv",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_rd_priv =
+        if (( p_krb_rd_priv =
               GetProcAddress( hKRB4_32, "krb_rd_priv" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6169,7 +6169,7 @@
                    "krb_rd_priv",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_rd_safe =
+        if (( p_krb_rd_safe =
               GetProcAddress( hKRB4_32, "krb_rd_safe" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6177,7 +6177,7 @@
                    "krb_rd_safe",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_in_tkt =
+        if (( p_krb_in_tkt =
               GetProcAddress( hKRB4_32, "krb_in_tkt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6185,7 +6185,7 @@
                    "krb_in_tkt",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb_save_credentials =
+        if (( p_krb_save_credentials =
               GetProcAddress( hKRB4_32, "krb_save_credentials" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6430,13 +6430,13 @@
 #ifdef NT
     hKRB42UID = LoadLibrary("KRB42UID");
     if ( hKRB42UID ) {
-        if (((FARPROC) p_k95_k4_princ_to_userid =
+        if (( p_k95_k4_princ_to_userid =
               GetProcAddress( hKRB42UID, "krb4_principal_to_userid" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"KRB42UID GetProcAddress failed","krb4_principal_to_userid",rc);
         }
-        if (((FARPROC) p_k95_k4_userok =
+        if (( p_k95_k4_userok =
               GetProcAddress( hKRB42UID, "krb4_userok" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6479,7 +6479,7 @@
     {
         DWORD (* pLeash_get_default_lifetime)(void);
 
-        (FARPROC) pLeash_get_default_lifetime =
+         pLeash_get_default_lifetime =
             GetProcAddress(hLEASH, "Leash_get_default_lifetime");
 
         if ( pLeash_get_default_lifetime )
@@ -6527,14 +6527,14 @@
         rc = GetLastError() ;
         debug(F111, "Kerberos LoadLibrary failed","KRB524",rc) ;
     } else {
-        if (((FARPROC) p_krb524_init_ets =
+        if (( p_krb524_init_ets =
               GetProcAddress( hKRB524, "krb524_init_ets" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb524_init_ets",rc);
         }
-        if (((FARPROC) p_krb524_convert_creds_kdc =
+        if (( p_krb524_convert_creds_kdc =
               GetProcAddress( hKRB524, "krb524_convert_creds_kdc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6546,7 +6546,7 @@
     if ( hKRB5_32 != NULL ) {
     if ( cygnus ) {
         debug(F100,"Kerberos V support provided by Cygnus Solutions","",0);
-        if (((FARPROC) p_com_err =
+        if (( p_com_err =
               GetProcAddress( hKRB5_32, "com_err" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6555,7 +6555,7 @@
         }
 #ifdef COMMENT
         /* Cygnus Solutions does not have this function in their DLL */
-        if (((FARPROC) p_com_err_va =
+        if (( p_com_err_va =
               GetProcAddress( hKRB5_32, "com_err_va" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6563,21 +6563,21 @@
             load_error = 1;
         }
 #endif /* COMMENT */
-        if (((FARPROC) p_error_message =
+        if (( p_error_message =
               GetProcAddress( hKRB5_32, "error_message" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","error_message",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_init_ets =
+        if (( p_krb5_init_ets =
               GetProcAddress( hKRB5_32, "krb5_init_ets" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","krb5_init_ets",rc) ;
             /* krb5_init_ets is a private function as of 1.2.5 */
         }
-        if (((FARPROC) p_cygnus_decode_krb5_ticket=
+        if (( p_cygnus_decode_krb5_ticket=
               GetProcAddress( hKRB5_32, "decode_krb5_ticket" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6595,34 +6595,34 @@
             debug(F111, "Kerberos LoadLibrary failed","COMERR32",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_com_err =
+        if (( p_com_err =
               GetProcAddress( hCOMERR32, "com_err" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","com_err",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_com_err_va =
+        if (( p_com_err_va =
               GetProcAddress( hCOMERR32, "com_err_va" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","com_err_va",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_error_message =
+        if (( p_error_message =
               GetProcAddress( hCOMERR32, "error_message" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","error_message",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_decode_krb5_ticket =
+        if (( p_decode_krb5_ticket =
               GetProcAddress( hKRB5_32, "decode_krb5_ticket" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "decode_krb5_ticket",rc) ;
-            if (((FARPROC) p_cygnus_decode_krb5_ticket =
+            if (( p_cygnus_decode_krb5_ticket =
                   GetProcAddress( hKRB5_32, "krb5_decode_ticket" )) == NULL )
             {
                 rc = GetLastError() ;
@@ -6631,7 +6631,7 @@
                 load_error = 1;
             }
         }
-        if (((FARPROC) p_krb5_mk_rep =
+        if (( p_krb5_mk_rep =
               GetProcAddress( hKRB5_32, "krb5_mk_rep" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6639,7 +6639,7 @@
                    "krb5_mk_rep",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_free_authenticator=
+        if (( p_krb5_free_authenticator=
               GetProcAddress( hKRB5_32, "krb5_free_authenticator" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6647,7 +6647,7 @@
                    "krb5_free_authenticator",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_verify_checksum=
+        if (( p_krb5_verify_checksum=
               GetProcAddress( hKRB5_32, "krb5_verify_checksum" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6655,7 +6655,7 @@
                    "krb5_verify_checksum",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_rd_req=
+        if (( p_krb5_rd_req=
               GetProcAddress( hKRB5_32, "krb5_rd_req" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6665,21 +6665,21 @@
         }
     }
 
-    if (((FARPROC) p_krb5_free_creds =
+    if (( p_krb5_free_creds =
           GetProcAddress( hKRB5_32, "krb5_free_creds" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_free_creds",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_data =
+    if (( p_krb5_free_data =
           GetProcAddress( hKRB5_32, "krb5_free_data" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_free_data",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_data_contents =
+    if (( p_krb5_free_data_contents =
           GetProcAddress( hKRB5_32, "krb5_free_data_contents" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6687,21 +6687,21 @@
                "krb5_free_data_contents",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_copy_keyblock =
+    if (( p_krb5_copy_keyblock =
           GetProcAddress( hKRB5_32, "krb5_copy_keyblock" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_copy_keyblock",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_keyblock =
+    if (( p_krb5_free_keyblock =
           GetProcAddress( hKRB5_32, "krb5_free_keyblock" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_free_keyblock",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_auth_con_getlocalsubkey =
+    if (( p_krb5_auth_con_getlocalsubkey =
           GetProcAddress( hKRB5_32, "krb5_auth_con_getlocalsubkey" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6709,21 +6709,21 @@
                "krb5_auth_con_getlocalsubkey",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_mk_req_extended =
+    if (( p_krb5_mk_req_extended =
           GetProcAddress( hKRB5_32, "krb5_mk_req_extended" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"Kerberos GetProcAddress failed","krb5_mk_req_extended",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_mk_req =
+    if (( p_krb5_mk_req =
           GetProcAddress( hKRB5_32, "krb5_mk_req" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"Kerberos GetProcAddress failed","krb5_mk_req",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_auth_con_setflags =
+    if (( p_krb5_auth_con_setflags =
       GetProcAddress( hKRB5_32, "krb5_auth_con_setflags" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6731,28 +6731,28 @@
                "krb5_auth_con_setflags",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_auth_con_init =
+    if (( p_krb5_auth_con_init =
           GetProcAddress( hKRB5_32, "krb5_auth_con_init" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_auth_con_init",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_auth_con_free =
+    if (( p_krb5_auth_con_free =
           GetProcAddress( hKRB5_32, "krb5_auth_con_free" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_auth_con_free",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_get_credentials =
+    if (( p_krb5_get_credentials =
           GetProcAddress( hKRB5_32, "krb5_get_credentials" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"Kerberos GetProcAddress failed","krb5_get_credentials",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_cred_contents =
+    if (( p_krb5_free_cred_contents =
           GetProcAddress( hKRB5_32, "krb5_free_cred_contents" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6760,7 +6760,7 @@
               "Kerberos GetProcAddress failed","krb5_free_cred_contents",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_sname_to_principal =
+    if (( p_krb5_sname_to_principal =
           GetProcAddress( hKRB5_32, "krb5_sname_to_principal" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6768,14 +6768,14 @@
               "Kerberos GetProcAddress failed","krb5_sname_to_principal",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_cc_default =
+    if (( p_krb5_cc_default =
           GetProcAddress( hKRB5_32, "krb5_cc_default" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_cc_default",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_ap_rep_enc_part =
+    if (( p_krb5_free_ap_rep_enc_part =
       GetProcAddress( hKRB5_32, "krb5_free_ap_rep_enc_part" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6783,21 +6783,21 @@
                "krb5_free_ap_rep_enc_part",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_rd_rep =
+    if (( p_krb5_rd_rep =
           GetProcAddress( hKRB5_32, "krb5_rd_rep" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_rd_rep",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_init_context =
+    if (( p_krb5_init_context =
           GetProcAddress( hKRB5_32, "krb5_init_context" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "Kerberos GetProcAddress failed","krb5_init_context",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_context =
+    if (( p_krb5_free_context =
           GetProcAddress( hKRB5_32, "krb5_free_context" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6805,7 +6805,7 @@
         load_error = 1;
     }
 
-    if (((FARPROC) p_krb5_free_principal =
+    if (( p_krb5_free_principal =
           GetProcAddress( hKRB5_32, "krb5_free_principal" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6813,7 +6813,7 @@
                "krb5_free_principal",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_free_unparsed_name =
+    if (( p_krb5_free_unparsed_name =
           GetProcAddress( hKRB5_32, "krb5_free_unparsed_name" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6823,7 +6823,7 @@
         load_error = 1;
 #endif /* COMMENT */
     }
-    if (((FARPROC) p_krb5_fwd_tgt_creds =
+    if (( p_krb5_fwd_tgt_creds =
           GetProcAddress( hKRB5_32, "krb5_fwd_tgt_creds" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6831,7 +6831,7 @@
                "krb5_fwd_tgt_creds",rc) ;
         load_error = 1;
     }
-    if (((FARPROC) p_krb5_auth_con_genaddrs =
+    if (( p_krb5_auth_con_genaddrs =
           GetProcAddress( hKRB5_32, "krb5_auth_con_genaddrs" )) == NULL )
     {
         rc = GetLastError() ;
@@ -6843,31 +6843,31 @@
         /* The DES functions are not required.  But if we do not have */
         /* them and do not have the CRYPT DLL we will not be able to  */
         /* perform mutual authentication.                             */
-        if (((FARPROC) p_des_ecb_encrypt =
+        if (( p_des_ecb_encrypt =
               GetProcAddress( hKRB5_32, "des_ecb_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","des_ecb_encrypt",rc);
         }
-        if (((FARPROC) p_des_pcbc_encrypt =
+        if (( p_des_pcbc_encrypt =
               GetProcAddress( hKRB5_32, "des_pcbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","des_pcbc_encrypt",rc);
         }
-        if (((FARPROC) p_des_new_random_key =
+        if (( p_des_new_random_key =
           GetProcAddress( hKRB5_32, "des_new_random_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","des_new_random_key",rc) ;
         }
-        if (((FARPROC) p_des_key_sched =
+        if (( p_des_key_sched =
               GetProcAddress( hKRB5_32, "des_key_sched" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed","des_key_sched",rc) ;
         }
-        if (((FARPROC) p_des_set_random_generator_seed =
+        if (( p_des_set_random_generator_seed =
               GetProcAddress(hKRB5_32, "des_set_random_generator_seed" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6875,7 +6875,7 @@
                    "des_set_random_generator_seed",rc) ;
         }
 
-        if (((FARPROC) p_krb5_get_host_realm=
+        if (( p_krb5_get_host_realm=
               GetProcAddress(hKRB5_32,"krb5_get_host_realm")) == NULL)
         {
             rc = GetLastError() ;
@@ -6883,7 +6883,7 @@
                    "krb5_get_host_realm",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_free_host_realm=
+        if (( p_krb5_free_host_realm=
               GetProcAddress(hKRB5_32,"krb5_free_host_realm")) == NULL)
         {
             rc = GetLastError() ;
@@ -6891,7 +6891,7 @@
                    "krb5_free_host_realm",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_get_in_tkt_with_keytab=
+        if (( p_krb5_get_in_tkt_with_keytab=
               GetProcAddress(hKRB5_32,"krb5_get_in_tkt_with_keytab")) == NULL)
         {
             rc = GetLastError() ;
@@ -6899,7 +6899,7 @@
                    "krb5_get_in_tkt_with_keytab",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_get_in_tkt_with_password=
+        if (( p_krb5_get_in_tkt_with_password=
              GetProcAddress(hKRB5_32,"krb5_get_in_tkt_with_password")) == NULL)
         {
             rc = GetLastError() ;
@@ -6907,7 +6907,7 @@
                    "krb5_get_in_tkt_with_password",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_read_password=
+        if (( p_krb5_read_password=
               GetProcAddress( hKRB5_32, "krb5_read_password" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6915,7 +6915,7 @@
                    "krb5_read_password",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_build_principal_ext=
+        if (( p_krb5_build_principal_ext=
               GetProcAddress( hKRB5_32, "krb5_build_principal_ext" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6923,7 +6923,7 @@
                    "krb5_build_principal_ext",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_unparse_name=
+        if (( p_krb5_unparse_name=
               GetProcAddress( hKRB5_32, "krb5_unparse_name" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6931,7 +6931,7 @@
                    "krb5_unparse_name",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_parse_name=
+        if (( p_krb5_parse_name=
               GetProcAddress( hKRB5_32, "krb5_parse_name" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6939,7 +6939,7 @@
                    "krb5_parse_name",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_cc_resolve=
+        if (( p_krb5_cc_resolve=
               GetProcAddress( hKRB5_32, "krb5_cc_resolve" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6947,14 +6947,14 @@
                    "krb5_cc_resolve",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_cc_default_name=
+        if (( p_krb5_cc_default_name=
               GetProcAddress( hKRB5_32, "krb5_cc_default_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_default_name",rc) ;
         }
-        if (((FARPROC) p_krb5_string_to_timestamp=
+        if (( p_krb5_string_to_timestamp=
               GetProcAddress( hKRB5_32, "krb5_string_to_timestamp" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6962,7 +6962,7 @@
                    "krb5_string_to_timestamp",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_kt_resolve=
+        if (( p_krb5_kt_resolve=
               GetProcAddress( hKRB5_32, "krb5_kt_resolve" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6970,7 +6970,7 @@
                    "krb5_kt_resolve",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_string_to_deltat=
+        if (( p_krb5_string_to_deltat=
               GetProcAddress( hKRB5_32, "krb5_string_to_deltat" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6978,7 +6978,7 @@
                    "krb5_string_to_deltat",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_timeofday=
+        if (( p_krb5_timeofday=
               GetProcAddress( hKRB5_32, "krb5_timeofday" )) == NULL )
         {
             rc = GetLastError() ;
@@ -6986,7 +6986,7 @@
                    "krb5_timeofday",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_get_credentials_renew=
+        if (( p_krb5_get_credentials_renew=
              GetProcAddress(hKRB5_32, "krb5_get_credentials_renew" )) == NULL)
         {
             rc = GetLastError() ;
@@ -6994,7 +6994,7 @@
                    "krb5_get_credentials_renew",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_get_credentials_validate=
+        if (( p_krb5_get_credentials_validate=
              GetProcAddress(hKRB5_32,"krb5_get_credentials_validate")) == NULL)
         {
             rc = GetLastError() ;
@@ -7002,7 +7002,7 @@
                    "krb5_get_credentials_validate",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_copy_principal=
+        if (( p_krb5_copy_principal=
               GetProcAddress( hKRB5_32, "krb5_copy_principal" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7010,7 +7010,7 @@
                    "krb5_copy_principal",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_timestamp_to_sfstring=
+        if (( p_krb5_timestamp_to_sfstring=
               GetProcAddress(hKRB5_32,"krb5_timestamp_to_sfstring" )) == NULL)
         {
             rc = GetLastError() ;
@@ -7018,7 +7018,7 @@
                    "krb5_timestamp_to_sfstring",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_kt_default=
+        if (( p_krb5_kt_default=
               GetProcAddress( hKRB5_32, "krb5_kt_default" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7026,7 +7026,7 @@
                    "krb5_kt_default",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_free_ticket=
+        if (( p_krb5_free_ticket=
               GetProcAddress( hKRB5_32, "krb5_free_ticket" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7036,7 +7036,7 @@
         }
 
 #ifdef CHECKADDRS
-        if (((FARPROC) p_krb5_os_localaddr=
+        if (( p_krb5_os_localaddr=
               GetProcAddress( hKRB5_32, "krb5_os_localaddr" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7044,7 +7044,7 @@
                    "krb5_os_localaddr",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_address_search=
+        if (( p_krb5_address_search=
               GetProcAddress( hKRB5_32, "krb5_address_search" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7056,7 +7056,7 @@
             /* prevents this function from being found.  Therefore a      */
             /* built in version is used if it is missing                  */
         }
-        if (((FARPROC) p_krb5_free_addresses=
+        if (( p_krb5_free_addresses=
               GetProcAddress( hKRB5_32, "krb5_free_addresses" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7066,7 +7066,7 @@
         }
 
 #endif /* CHECKADDRS */
-        if (((FARPROC) p_krb5_auth_con_getremotesubkey=
+        if (( p_krb5_auth_con_getremotesubkey=
               GetProcAddress( hKRB5_32, "krb5_auth_con_getremotesubkey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7074,7 +7074,7 @@
                    "krb5_auth_con_getremotesubkey",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_auth_con_getkey=
+        if (( p_krb5_auth_con_getkey=
               GetProcAddress( hKRB5_32, "krb5_auth_con_getkey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7082,7 +7082,7 @@
                    "krb5_auth_con_getkey",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_auth_con_getauthenticator=
+        if (( p_krb5_auth_con_getauthenticator=
               GetProcAddress( hKRB5_32, "krb5_auth_con_getauthenticator" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7090,35 +7090,35 @@
                    "krb5_auth_con_getauthenticator",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_auth_con_setrcache=
+        if (( p_krb5_auth_con_setrcache=
               GetProcAddress( hKRB5_32, "krb5_auth_con_setrcache" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_auth_con_setrcache",rc) ;
         }
-        if (((FARPROC) p_krb5_get_server_rcache=
+        if (( p_krb5_get_server_rcache=
               GetProcAddress( hKRB5_32, "krb5_get_server_rcache" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_get_server_rcache",rc) ;
         }
-        if (((FARPROC) p_krb5_auth_con_getrcache=
+        if (( p_krb5_auth_con_getrcache=
               GetProcAddress( hKRB5_32, "krb5_auth_con_getrcache" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_auth_con_getrcache",rc) ;
         }
-        if (((FARPROC) p_krb5_free_tgt_creds=
+        if (( p_krb5_free_tgt_creds=
               GetProcAddress( hKRB5_32, "krb5_free_tgt_creds" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_free_tgt_creds",rc) ;
         }
-        if (((FARPROC) p_krb5_rd_cred=
+        if (( p_krb5_rd_cred=
               GetProcAddress( hKRB5_32, "krb5_rd_cred" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7126,70 +7126,70 @@
                    "krb5_rd_cred",rc) ;
         }
 
-        if (((FARPROC) p_krb5_c_enctype_compare=
+        if (( p_krb5_c_enctype_compare=
               GetProcAddress( hKRB5_32, "krb5_c_enctype_compare" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_enctype_compare",rc) ;
         }
-        if (((FARPROC) p_krb5_free_error=
+        if (( p_krb5_free_error=
               GetProcAddress( hKRB5_32, "krb5_free_error" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_free_error",rc) ;
         }
-        if (((FARPROC) p_krb5_sendauth=
+        if (( p_krb5_sendauth=
               GetProcAddress( hKRB5_32, "krb5_sendauth" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_sendauth",rc) ;
         }
-        if (((FARPROC) p_krb5_process_key=
+        if (( p_krb5_process_key=
               GetProcAddress( hKRB5_32, "krb5_process_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_process_key",rc) ;
         }
-        if (((FARPROC) p_krb5_use_enctype=
+        if (( p_krb5_use_enctype=
               GetProcAddress( hKRB5_32, "krb5_use_enctype" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_use_enctype",rc) ;
         }
-        if (((FARPROC) p_krb5_encrypt=
+        if (( p_krb5_encrypt=
               GetProcAddress( hKRB5_32, "krb5_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_encrypt",rc) ;
         }
-        if (((FARPROC) p_krb5_decrypt=
+        if (( p_krb5_decrypt=
               GetProcAddress( hKRB5_32, "krb5_decrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_decrypt",rc) ;
         }
-        if (((FARPROC) p_krb5_encrypt_size=
+        if (( p_krb5_encrypt_size=
               GetProcAddress( hKRB5_32, "krb5_encrypt_size" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_encrypt_size",rc) ;
         }
-        if (((FARPROC) p_krb5_kuserok=
+        if (( p_krb5_kuserok=
               GetProcAddress( hKRB5_32, "krb5_kuserok" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kuserok",rc) ;
         }
-        if (((FARPROC) p_krb5_appdefault_boolean =
+        if (( p_krb5_appdefault_boolean =
               GetProcAddress( hKRB5_32, "krb5_appdefault_boolean" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7197,7 +7197,7 @@
                    "krb5_appdefault_boolean",rc) ;
             /* NRL only */
         }
-        if (((FARPROC) p_krb5_appdefault_string =
+        if (( p_krb5_appdefault_string =
               GetProcAddress( hKRB5_32, "krb5_appdefault_string" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7205,7 +7205,7 @@
                    "krb5_appdefault_string",rc) ;
             /* NRL only */
         }
-        if (((FARPROC) p_krb5_get_renewed_creds =
+        if (( p_krb5_get_renewed_creds =
               GetProcAddress( hKRB5_32, "krb5_get_renewed_creds" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7213,7 +7213,7 @@
                    "krb5_get_renewed_creds",rc) ;
             /* Not in NRL or NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_validated_creds =
+        if (( p_krb5_get_validated_creds =
               GetProcAddress( hKRB5_32, "krb5_get_validated_creds" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7221,7 +7221,7 @@
                    "krb5_get_validated_creds",rc) ;
             /* Not in NRL or NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_password =
+        if (( p_krb5_get_init_creds_password =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_password" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7229,7 +7229,7 @@
                    "krb5_get_init_creds_password",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_address_list =
+        if (( p_krb5_get_init_creds_opt_set_address_list =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_address_list" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7237,7 +7237,7 @@
                    "krb5_get_init_creds_opt_set_address_list",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_tkt_life =
+        if (( p_krb5_get_init_creds_opt_set_tkt_life =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_tkt_life" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7245,7 +7245,7 @@
                    "krb5_get_init_creds_opt_set_tkt_life",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_forwardable =
+        if (( p_krb5_get_init_creds_opt_set_forwardable =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_forwardable" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7253,7 +7253,7 @@
                    "krb5_get_init_creds_opt_set_forwardable",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_proxiable =
+        if (( p_krb5_get_init_creds_opt_set_proxiable =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_proxiable" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7261,7 +7261,7 @@
                    "krb5_get_init_creds_opt_set_proxiable",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_renew_life =
+        if (( p_krb5_get_init_creds_opt_set_renew_life =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_renew_life" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7269,7 +7269,7 @@
                    "krb5_get_init_creds_opt_set_renew_life",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_init =
+        if (( p_krb5_get_init_creds_opt_init =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7277,7 +7277,7 @@
                    "krb5_get_init_creds_opt_init",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_etype_list =
+        if (( p_krb5_get_init_creds_opt_set_etype_list =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_etype_list" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7285,7 +7285,7 @@
                    "krb5_get_init_creds_opt_set_etype_list",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_preauth_list =
+        if (( p_krb5_get_init_creds_opt_set_preauth_list =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_preauth_list" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7293,7 +7293,7 @@
                    "krb5_get_init_creds_opt_set_preauth_list",rc) ;
             /* Not in NT-ALPHA-2 */
         }
-        if (((FARPROC) p_krb5_get_init_creds_opt_set_salt =
+        if (( p_krb5_get_init_creds_opt_set_salt =
               GetProcAddress( hKRB5_32, "krb5_get_init_creds_opt_set_salt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7302,7 +7302,7 @@
             /* Not in NT-ALPHA-2 */
         }
 
-        if (((FARPROC) p_krb5_rd_safe =
+        if (( p_krb5_rd_safe =
               GetProcAddress( hKRB5_32, "krb5_rd_safe" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7310,7 +7310,7 @@
                    "krb5_rd_safe",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_mk_safe =
+        if (( p_krb5_mk_safe =
               GetProcAddress( hKRB5_32, "krb5_mk_safe" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7318,7 +7318,7 @@
                    "krb5_mk_safe",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_rd_priv =
+        if (( p_krb5_rd_priv =
               GetProcAddress( hKRB5_32, "krb5_rd_priv" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7326,7 +7326,7 @@
                    "krb5_rd_priv",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_mk_priv =
+        if (( p_krb5_mk_priv =
               GetProcAddress( hKRB5_32, "krb5_mk_priv" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7334,7 +7334,7 @@
                    "krb5_mk_priv",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_auth_con_setuseruserkey =
+        if (( p_krb5_auth_con_setuseruserkey =
               GetProcAddress( hKRB5_32, "krb5_auth_con_setuseruserkey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7342,7 +7342,7 @@
                    "krb5_auth_con_setuseruserkey",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_krb5_get_profile =
+        if (( p_krb5_get_profile =
               GetProcAddress( hKRB5_32, "krb5_get_profile" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7350,56 +7350,56 @@
                    "krb5_get_profile",rc) ;
         }
 
-        if (((FARPROC) p_krb5_free_keyblock_contents =
+        if (( p_krb5_free_keyblock_contents =
               GetProcAddress( hKRB5_32, "krb5_free_keyblock_contents" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_free_keyblock_contents",rc) ;
         }
-        if (((FARPROC) p_krb5_c_encrypt =
+        if (( p_krb5_c_encrypt =
               GetProcAddress( hKRB5_32, "krb5_c_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_encrypt",rc) ;
         }
-        if (((FARPROC) p_krb5_c_decrypt =
+        if (( p_krb5_c_decrypt =
               GetProcAddress( hKRB5_32, "krb5_c_decrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_decrypt",rc) ;
         }
-        if (((FARPROC) p_krb5_c_make_random_key =
+        if (( p_krb5_c_make_random_key =
               GetProcAddress( hKRB5_32, "krb5_c_make_random_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_make_random_key",rc) ;
         }
-        if (((FARPROC) p_krb5_c_random_seed =
+        if (( p_krb5_c_random_seed =
               GetProcAddress( hKRB5_32, "krb5_c_random_seed" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_random_seed",rc) ;
         }
-        if (((FARPROC) p_krb5_c_block_size =
+        if (( p_krb5_c_block_size =
               GetProcAddress( hKRB5_32, "krb5_c_block_size" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_block_size",rc) ;
         }
-        if (((FARPROC) p_krb5_c_encrypt_length =
+        if (( p_krb5_c_encrypt_length =
               GetProcAddress( hKRB5_32, "krb5_c_encrypt_length" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_c_encrypt_length",rc) ;
         }
-        if (((FARPROC) p_krb5_kt_default_name =
+        if (( p_krb5_kt_default_name =
               GetProcAddress( hKRB5_32, "krb5_kt_default_name" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7407,77 +7407,77 @@
                    "krb5_kt_default_name",rc);
         }
 
-        if (((FARPROC) p_krb5_cc_get_principal =
+        if (( p_krb5_cc_get_principal =
               GetProcAddress( hKRB5_32, "krb5_cc_get_principal" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_get_principal",rc);
         }
-        if (((FARPROC) p_krb5_cc_store_cred =
+        if (( p_krb5_cc_store_cred =
               GetProcAddress( hKRB5_32, "krb5_cc_store_cred" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_store_cred",rc);
         }
-        if (((FARPROC) p_krb5_cc_initialize =
+        if (( p_krb5_cc_initialize =
               GetProcAddress( hKRB5_32, "krb5_cc_initialize" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_initialize",rc);
         }
-        if (((FARPROC) p_krb5_cc_destroy =
+        if (( p_krb5_cc_destroy =
               GetProcAddress( hKRB5_32, "krb5_cc_destroy" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_destroy",rc);
         }
-        if (((FARPROC) p_krb5_cc_end_seq_get =
+        if (( p_krb5_cc_end_seq_get =
               GetProcAddress( hKRB5_32, "krb5_cc_end_seq_get" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_end_seq_get",rc);
         }
-        if (((FARPROC) p_krb5_cc_next_cred =
+        if (( p_krb5_cc_next_cred =
               GetProcAddress( hKRB5_32, "krb5_cc_next_cred" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_next_cred",rc);
         }
-        if (((FARPROC) p_krb5_cc_start_seq_get =
+        if (( p_krb5_cc_start_seq_get =
               GetProcAddress( hKRB5_32, "krb5_cc_start_seq_get" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_start_seq_get",rc);
         }
-        if (((FARPROC) p_krb5_cc_get_type =
+        if (( p_krb5_cc_get_type =
               GetProcAddress( hKRB5_32, "krb5_cc_get_type" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_get_type",rc);
         }
-        if (((FARPROC) p_krb5_cc_get_name =
+        if (( p_krb5_cc_get_name =
               GetProcAddress( hKRB5_32, "krb5_cc_get_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_get_name",rc);
         }
-        if (((FARPROC) p_krb5_cc_set_flags =
+        if (( p_krb5_cc_set_flags =
               GetProcAddress( hKRB5_32, "krb5_cc_set_flags" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_cc_set_flags",rc);
         }
-        if (((FARPROC) p_krb5_cc_close =
+        if (( p_krb5_cc_close =
               GetProcAddress( hKRB5_32, "krb5_cc_close" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7485,56 +7485,56 @@
                    "krb5_cc_close",rc);
         }
 
-        if (((FARPROC) p_krb5_kt_get_type =
+        if (( p_krb5_kt_get_type =
               GetProcAddress( hKRB5_32, "krb5_kt_get_type" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_get_type",rc);
         }
-        if (((FARPROC) p_krb5_kt_get_name =
+        if (( p_krb5_kt_get_name =
               GetProcAddress( hKRB5_32, "krb5_kt_get_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_get_name",rc);
         }
-        if (((FARPROC) p_krb5_kt_close =
+        if (( p_krb5_kt_close =
               GetProcAddress( hKRB5_32, "krb5_kt_close" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_close",rc);
         }
-        if (((FARPROC) p_krb5_kt_get_entry =
+        if (( p_krb5_kt_get_entry =
               GetProcAddress( hKRB5_32, "krb5_kt_get_entry" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_get_entry",rc);
         }
-        if (((FARPROC) p_krb5_kt_start_seq_get =
+        if (( p_krb5_kt_start_seq_get =
               GetProcAddress( hKRB5_32, "krb5_kt_start_seq_get" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_start_seq_get",rc);
         }
-        if (((FARPROC) p_krb5_kt_next_entry =
+        if (( p_krb5_kt_next_entry =
               GetProcAddress( hKRB5_32, "krb5_kt_next_entry" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_next_entry",rc);
         }
-        if (((FARPROC) p_krb5_kt_end_seq_get =
+        if (( p_krb5_kt_end_seq_get =
               GetProcAddress( hKRB5_32, "krb5_kt_end_seq_get" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "krb5_kt_end_seq_get",rc);
         }
-        if (((FARPROC) p_krb5_build_principal =
+        if (( p_krb5_build_principal =
               GetProcAddress( hKRB5_32, "krb5_build_principal" )) == NULL )
         {
             rc = GetLastError() ;
@@ -7550,14 +7550,14 @@
 
     hPROFILE = LoadLibrary("XPPROF32") ;
     if ( hPROFILE ) {
-        if (((FARPROC) p_profile_get_relation_names =
+        if (( p_profile_get_relation_names =
               GetProcAddress( hPROFILE, "profile_get_relation_names" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "Kerberos GetProcAddress failed",
                    "profile_get_relation_names",rc) ;
         }
-        if (((FARPROC) p_profile_get_subsection_names =
+        if (( p_profile_get_subsection_names =
               GetProcAddress( hPROFILE, "profile_get_subsection_names" )) == NULL )
         {
             rc = GetLastError() ;
@@ -8361,14 +8361,14 @@
 #ifdef NT
     hKRB52UID = LoadLibrary("KRB52UID");
     if ( hKRB52UID ) {
-        if (((FARPROC) p_k95_k5_principal_to_localname =
+        if (( p_k95_k5_principal_to_localname =
               GetProcAddress( hKRB52UID, "krb5_principal_to_localname" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"KRB52UID GetProcAddress failed",
                    "krb5_principal_to_localname",rc);
         }
-        if (((FARPROC) p_k95_k5_userok =
+        if (( p_k95_k5_userok =
               GetProcAddress( hKRB52UID, "krb5_kuserok" )) == NULL )
         {
             rc = GetLastError() ;
@@ -8389,21 +8389,21 @@
         DWORD (* pLeash_get_default_publicip)(void);
         DWORD (* pLeash_get_default_use_krb4)(void);
 
-        (FARPROC) pLeash_get_default_lifetime =
+         pLeash_get_default_lifetime =
             GetProcAddress(hLEASH, "Leash_get_default_lifetime");
-        (FARPROC) pLeash_get_default_forwardable =
+         pLeash_get_default_forwardable =
             GetProcAddress(hLEASH, "Leash_get_default_forwardable");
-        (FARPROC) pLeash_get_default_proxiable =
+         pLeash_get_default_proxiable =
             GetProcAddress(hLEASH, "Leash_get_default_proxiable");
-        (FARPROC) pLeash_get_default_renewable =
+         pLeash_get_default_renewable =
             GetProcAddress(hLEASH, "Leash_get_default_renewable");
-        (FARPROC) pLeash_get_default_renew_till =
+         pLeash_get_default_renew_till =
             GetProcAddress(hLEASH, "Leash_get_default_renew_till");
-        (FARPROC) pLeash_get_default_noaddresses =
+         pLeash_get_default_noaddresses =
             GetProcAddress(hLEASH, "Leash_get_default_noaddresses");
-        (FARPROC) pLeash_get_default_publicip =
+         pLeash_get_default_publicip =
             GetProcAddress(hLEASH, "Leash_get_default_publicip");
-        (FARPROC) pLeash_get_default_use_krb4 =
+         pLeash_get_default_use_krb4 =
             GetProcAddress(hLEASH, "Leash_get_default_use_krb4");
 
         if ( pLeash_get_default_lifetime )
@@ -8493,42 +8493,42 @@
         rc = GetLastError() ;
         debug(F111, "SRP LoadLibrary failed","SRP",rc) ;
     } else {
-        if (((FARPROC) p_t_clientresponse =
+        if (( p_t_clientresponse =
               GetProcAddress( hSRP, "t_clientresponse" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "SRP GetProcAddress failed","t_clientresponse",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_t_clientgetkey =
+        if (( p_t_clientgetkey =
               GetProcAddress( hSRP, "t_clientgetkey" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "SRP GetProcAddress failed","t_clientgetkey",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_t_clientpasswd =
+        if (( p_t_clientpasswd =
               GetProcAddress( hSRP, "t_clientpasswd" )) == NULL )
         {                                                                      x2
             rc = GetLastError() ;
             debug(F111, "SRP GetProcAddress failed","t_clientpasswd",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_t_clientgenexp =
+        if (( p_t_clientgenexp =
               GetProcAddress( hSRP, "t_clientgenexp" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "SRP GetProcAddress failed","t_clientgenexp",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_t_clientopen =
+        if (( p_t_clientopen =
               GetProcAddress( hSRP, "t_clientopen" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111, "SRP GetProcAddress failed","t_clientopen",rc) ;
             load_error = 1;
         }
-        if (((FARPROC) p_t_clientverify =
+        if (( p_t_clientverify =
               GetProcAddress( hSRP, "t_clientverify" )) == NULL )
         {
             rc = GetLastError() ;
@@ -8780,73 +8780,73 @@
     if ( !hLIBKRYPTO )
         return(0);
 
-    if (((FARPROC) p_cipher_getdescbyid =
+    if (( p_cipher_getdescbyid =
           GetProcAddress( hLIBKRYPTO, "cipher_getdescbyid" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_cipher_getlist =
+    if (( p_cipher_getlist =
           GetProcAddress( hLIBKRYPTO, "cipher_getlist" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_cipher_getdescbyname =
+    if (( p_cipher_getdescbyname =
           GetProcAddress( hLIBKRYPTO, "cipher_getdescbyname" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_hash_getdescbyid =
+    if (( p_hash_getdescbyid =
           GetProcAddress( hLIBKRYPTO, "hash_getdescbyid" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_hash_getlist =
+    if (( p_hash_getlist =
           GetProcAddress( hLIBKRYPTO, "hash_getlist" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_hash_getdescbyname =
+    if (( p_hash_getdescbyname =
           GetProcAddress( hLIBKRYPTO, "hash_getdescbyname" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_krypto_delete =
+    if (( p_krypto_delete =
           GetProcAddress( hLIBKRYPTO, "krypto_delete" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_krypto_new =
+    if (( p_krypto_new =
           GetProcAddress( hLIBKRYPTO, "krypto_new" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_hash_supported =
+    if (( p_hash_supported =
           GetProcAddress( hLIBKRYPTO, "hash_supported" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_cipher_supported =
+    if (( p_cipher_supported =
           GetProcAddress( hLIBKRYPTO, "cipher_supported" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_krypto_msg_safe =
+    if (( p_krypto_msg_safe =
           GetProcAddress( hLIBKRYPTO, "krypto_msg_safe" )) == NULL )
     {
         rc = GetLastError() ;
         load_error = 1;
     }
-    if (((FARPROC) p_krypto_msg_priv =
+    if (( p_krypto_msg_priv =
           GetProcAddress( hLIBKRYPTO, "krypto_msg_priv" )) == NULL )
     {
         rc = GetLastError() ;
@@ -9299,97 +9299,97 @@
     if ( !hGSSAPI )
         return(0);
 
-    if (((FARPROC) p_gss_release_buffer =
+    if (( p_gss_release_buffer =
           GetProcAddress( hGSSAPI, "gss_release_buffer" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_seal =
+    if (( p_gss_seal =
           GetProcAddress( hGSSAPI, "gss_seal" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_unseal =
+    if (( p_gss_unseal =
           GetProcAddress( hGSSAPI, "gss_unseal" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_release_name =
+    if (( p_gss_release_name =
           GetProcAddress( hGSSAPI, "gss_release_name" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_init_sec_context =
+    if (( p_gss_init_sec_context =
           GetProcAddress( hGSSAPI, "gss_init_sec_context" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_import_name =
+    if (( p_gss_import_name =
           GetProcAddress( hGSSAPI, "gss_import_name" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_display_status =
+    if (( p_gss_display_status =
           GetProcAddress( hGSSAPI, "gss_display_status" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_indicate_mechs =
+    if (( p_gss_indicate_mechs =
           GetProcAddress( hGSSAPI, "gss_indicate_mechs" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_verify_mic =
+    if (( p_gss_verify_mic =
           GetProcAddress( hGSSAPI, "gss_verify_mic" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_test_oid_set_member =
+    if (( p_gss_test_oid_set_member =
           GetProcAddress( hGSSAPI, "gss_test_oid_set_member" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_add_oid_set_member =
+    if (( p_gss_add_oid_set_member =
           GetProcAddress( hGSSAPI, "gss_add_oid_set_member" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_create_empty_oid_set =
+    if (( p_gss_create_empty_oid_set =
           GetProcAddress( hGSSAPI, "gss_create_empty_oid_set" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_release_cred =
+    if (( p_gss_release_cred =
           GetProcAddress( hGSSAPI, "gss_release_cred" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_delete_sec_context =
+    if (( p_gss_delete_sec_context =
           GetProcAddress( hGSSAPI, "gss_delete_sec_context" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_accept_sec_context =
+    if (( p_gss_accept_sec_context =
           GetProcAddress( hGSSAPI, "gss_accept_sec_context" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_release_oid_set =
+    if (( p_gss_release_oid_set =
           GetProcAddress( hGSSAPI, "gss_release_oid_set" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_acquire_cred =
+    if (( p_gss_acquire_cred =
           GetProcAddress( hGSSAPI, "gss_acquire_cred" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_display_name =
+    if (( p_gss_display_name =
           GetProcAddress( hGSSAPI, "gss_display_name" )) == NULL )
     {
         load_error = 1;
     }
-    if (((FARPROC) p_gss_get_mic =
+    if (( p_gss_get_mic =
           GetProcAddress( hGSSAPI, "gss_get_mic" )) == NULL )
     {
         load_error = 1;
diff -Nruiw src.orig/ckofio.c src.farproc/ckofio.c
--- src.orig/ckofio.c	2005-12-29 23:56:07.000000000 -0500
+++ src.farproc/ckofio.c	2013-11-19 22:27:43.197128156 -0500
@@ -1886,7 +1886,7 @@
           PULARGE_INTEGER lpTotalNumberOfFreeBytes // free bytes on disk
           )=NULL;
     ULARGE_INTEGER i64FreeBytesToCaller, i64TotalBytes, i64FreeBytes;
-    (FARPROC) pGetDiskFreeSpaceEx = GetProcAddress( GetModuleHandle("kernel32.dll"),
+     pGetDiskFreeSpaceEx = GetProcAddress( GetModuleHandle("kernel32.dll"),
                                           "GetDiskFreeSpaceExA");
 
     if (drive)
@@ -2537,7 +2537,7 @@
         if (hKernel == INVALID_HANDLE_VALUE)
             hKernel = LoadLibrary("kernel32.dll");
         if (hKernel != INVALID_HANDLE_VALUE)
-            (FARPROC) p_GetLongPathNameA =
+             p_GetLongPathNameA =
                 GetProcAddress( hKernel, "GetLongPathNameA" );
     }
 
@@ -4059,7 +4059,7 @@
         if (hKernel == INVALID_HANDLE_VALUE)
             hKernel = LoadLibrary("kernel32.dll");
         if (hKernel != INVALID_HANDLE_VALUE)
-            (FARPROC) p_CopyFileExA =
+             p_CopyFileExA =
                 GetProcAddress( hKernel, "CopyFileExA" );
     }
 
@@ -4124,7 +4124,7 @@
         if (hKernel == INVALID_HANDLE_VALUE)
             hKernel = LoadLibrary("kernel32.dll");
         if (hKernel != INVALID_HANDLE_VALUE)
-            (FARPROC) p_CreateHardLinkA =
+             p_CreateHardLinkA =
                 GetProcAddress( hKernel, "CreateHardLinkA" );
     }
 
@@ -6451,13 +6451,13 @@
         if ( !hUserEnv )
             hUserEnv = LoadLibrary("userenv.dll");
         if ( hUserEnv ) {
-            (FARPROC) p_CreateEnvironmentBlock =
+             p_CreateEnvironmentBlock =
                 GetProcAddress( hUserEnv, "CreateEnvironmentBlock" );
-            (FARPROC) p_DestroyEnvironmentBlock =
+             p_DestroyEnvironmentBlock =
                 GetProcAddress( hUserEnv, "DestroyEnvironmentBlock" );
-            (FARPROC) p_LoadUserProfileA =
+             p_LoadUserProfileA =
                 GetProcAddress( hUserEnv, "LoadUserProfileA" );
-            (FARPROC) p_UnloadUserProfileA =
+             p_UnloadUserProfileA =
                 GetProcAddress( hUserEnv, "UnloadUserProfileA" );
         }
     }
@@ -6813,7 +6813,7 @@
 		    if ( !hAdvApi )
 			hAdvApi = LoadLibrary("advapi32.dll");
 		    if ( hAdvApi ) {
-			(FARPROC) p_DuplicateTokenEx =
+			 p_DuplicateTokenEx =
 			    GetProcAddress( hAdvApi, "DuplicateTokenEx" );
 		    }
 		}
@@ -7251,12 +7251,12 @@
         debug(F110,"LoadNetApi32","loading netapi32.dll",0);
         hNetApi32 = LoadLibrary( "netapi32.dll" );
         if ( hNetApi32 ) {
-            (FARPROC) p_NetUserGetInfo = GetProcAddress( hNetApi32, "NetUserGetInfo" );
-            (FARPROC) p_NetApiBufferFree = GetProcAddress( hNetApi32, "NetApiBufferFree" );
-            (FARPROC) p_NetGetDCName = GetProcAddress( hNetApi32, "NetGetDCName" );
-            (FARPROC) p_NetUserGetLocalGroups = GetProcAddress( hNetApi32, "NetUserGetLocalGroups" );
-            (FARPROC) p_NetUserGetGroups = GetProcAddress( hNetApi32, "NetUserGetGroups" );
-            (FARPROC) p_NetGroupGetInfo = GetProcAddress( hNetApi32, "NetGroupGetInfo" );
+             p_NetUserGetInfo = GetProcAddress( hNetApi32, "NetUserGetInfo" );
+             p_NetApiBufferFree = GetProcAddress( hNetApi32, "NetApiBufferFree" );
+             p_NetGetDCName = GetProcAddress( hNetApi32, "NetGetDCName" );
+             p_NetUserGetLocalGroups = GetProcAddress( hNetApi32, "NetUserGetLocalGroups" );
+             p_NetUserGetGroups = GetProcAddress( hNetApi32, "NetUserGetGroups" );
+             p_NetGroupGetInfo = GetProcAddress( hNetApi32, "NetGroupGetInfo" );
 
             if ( !p_NetUserGetInfo || !p_NetApiBufferFree || !p_NetGetDCName ||
                  !p_NetUserGetLocalGroups || !p_NetUserGetGroups || !p_NetGroupGetInfo )
diff -Nruiw src.orig/ckonet.c src.farproc/ckonet.c
--- src.orig/ckonet.c	2005-12-29 23:38:22.000000000 -0500
+++ src.farproc/ckonet.c	2013-11-19 22:27:43.234128157 -0500
@@ -533,7 +533,7 @@
         return (-1);
     }
 
-    if (((FARPROC) net_dll_netopen =
+    if (( net_dll_netopen =
           GetProcAddress( hNetDll, "netopen" )) == NULL )
     {
         rc = GetLastError() ;
@@ -541,7 +541,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_netclos =
+    if (( net_dll_netclos =
           GetProcAddress( hNetDll, "netclos" )) == NULL )
     {
         rc = GetLastError() ;
@@ -549,7 +549,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_nettchk =
+    if (( net_dll_nettchk =
           GetProcAddress( hNetDll, "nettchk" )) == NULL )
     {
         rc = GetLastError() ;
@@ -557,7 +557,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_netflui =
+    if (( net_dll_netflui =
           GetProcAddress( hNetDll, "netflui" )) == NULL )
     {
         rc = GetLastError() ;
@@ -565,7 +565,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_netbreak =
+    if (( net_dll_netbreak =
           GetProcAddress( hNetDll, "netbreak" )) == NULL )
     {
         rc = GetLastError() ;
@@ -573,7 +573,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_netinc =
+    if (( net_dll_netinc =
           GetProcAddress( hNetDll, "netinc" )) == NULL )
     {
         rc = GetLastError() ;
@@ -581,7 +581,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_netxin =
+    if (( net_dll_netxin =
           GetProcAddress( hNetDll, "netxin" )) == NULL )
     {
         rc = GetLastError() ;
@@ -589,7 +589,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_nettoc =
+    if (( net_dll_nettoc =
           GetProcAddress( hNetDll, "nettoc" )) == NULL )
     {
         rc = GetLastError() ;
@@ -597,7 +597,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_nettol =
+    if (( net_dll_nettol =
           GetProcAddress( hNetDll, "nettol" )) == NULL )
     {
         rc = GetLastError() ;
@@ -605,7 +605,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_terminfo =
+    if (( net_dll_terminfo =
           GetProcAddress( hNetDll, "terminfo" )) == NULL )
     {
         rc = GetLastError() ;
@@ -613,7 +613,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_version =
+    if (( net_dll_version =
           GetProcAddress( hNetDll, "version" )) == NULL )
     {
         rc = GetLastError() ;
@@ -621,7 +621,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_errorstr =
+    if (( net_dll_errorstr =
           GetProcAddress( hNetDll, "errorstr" )) == NULL )
     {
         rc = GetLastError() ;
@@ -629,7 +629,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_ttpkt =
+    if (( net_dll_ttpkt =
           GetProcAddress( hNetDll, "ttpkt" )) == NULL )
     {
         rc = GetLastError() ;
@@ -637,7 +637,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_ttres =
+    if (( net_dll_ttres =
           GetProcAddress( hNetDll, "ttres" )) == NULL )
     {
         rc = GetLastError() ;
@@ -645,7 +645,7 @@
         netdll_unload();
         return(-1);
     }
-    if (((FARPROC) net_dll_ttvt =
+    if (( net_dll_ttvt =
           GetProcAddress( hNetDll, "ttvt" )) == NULL )
     {
         rc = GetLastError() ;
@@ -4040,61 +4040,61 @@
         debug(F111, "LoadDECTAL LoadLibrary failed","dectal",rc) ;
         return FALSE;
     }
-    if (((FARPROC) InstalledAccess = GetProcAddress( hDECTAL, "InstalledAccess" )) == NULL )
+    if (( InstalledAccess = GetProcAddress( hDECTAL, "InstalledAccess" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","InstalledAccess",rc) ;
         return FALSE;
     }
-    if (((FARPROC) InquireServices = GetProcAddress( hDECTAL, "InquireServices" )) == NULL )
+    if (( InquireServices = GetProcAddress( hDECTAL, "InquireServices" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","InquireServices",rc) ;
         return FALSE;
     }
-    if (((FARPROC) GetNextService = GetProcAddress( hDECTAL, "GetNextService" )) == NULL )
+    if (( GetNextService = GetProcAddress( hDECTAL, "GetNextService" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","GetNextService",rc) ;
         return FALSE;
     }
-    if (((FARPROC) OpenSession = GetProcAddress( hDECTAL, "OpenSession" )) == NULL )
+    if (( OpenSession = GetProcAddress( hDECTAL, "OpenSession" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","OpenSession",rc) ;
         return FALSE;
     }
-    if (((FARPROC) CloseSession = GetProcAddress( hDECTAL, "CloseSession" )) == NULL )
+    if (( CloseSession = GetProcAddress( hDECTAL, "CloseSession" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","CloseSession",rc) ;
         return FALSE;
     }
-    if (((FARPROC) ReadData = GetProcAddress( hDECTAL, "ReadData" )) == NULL )
+    if (( ReadData = GetProcAddress( hDECTAL, "ReadData" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","ReadData",rc) ;
         return FALSE;
     }
-    if (((FARPROC) WriteData = GetProcAddress( hDECTAL, "WriteData" )) == NULL )
+    if (( WriteData = GetProcAddress( hDECTAL, "WriteData" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","WriteData",rc) ;
         return FALSE;
     }
-    if (((FARPROC) SendBreak = GetProcAddress( hDECTAL, "SendBreak" )) == NULL )
+    if (( SendBreak = GetProcAddress( hDECTAL, "SendBreak" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","SendBreak",rc) ;
         return FALSE;
     }
-    if (((FARPROC) GetDetailError = GetProcAddress( hDECTAL, "GetDetailError" )) == NULL )
+    if (( GetDetailError = GetProcAddress( hDECTAL, "GetDetailError" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","GetDetailError",rc) ;
         return FALSE;
     }
-    if (((FARPROC) DataNotify = GetProcAddress( hDECTAL, "DataNotify" )) == NULL )
+    if (( DataNotify = GetProcAddress( hDECTAL, "DataNotify" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111, "LoadDECTAL GetProcAddress failed","DataNotify",rc) ;
diff -Nruiw src.orig/ckop.c src.farproc/ckop.c
--- src.orig/ckop.c	2003-05-02 19:20:17.000000000 -0400
+++ src.farproc/ckop.c	2013-11-19 22:27:43.235128157 -0500
@@ -67,7 +67,7 @@
         debug(F101,"load_p_dll - Unable to load module: rc","",rc);
         return rc;
     }
-    (FARPROC) p_transfer = GetProcAddress( dll_handle, "p_transfer" ) ;
+     p_transfer = GetProcAddress( dll_handle, "p_transfer" ) ;
     if ( !p_transfer )
     {
         rc = GetLastError() ;
diff -Nruiw src.orig/ckoreg.c src.farproc/ckoreg.c
--- src.orig/ckoreg.c	2011-07-19 17:12:04.000000000 -0400
+++ src.farproc/ckoreg.c	2013-11-19 22:27:43.238128157 -0500
@@ -60,7 +60,7 @@
                 if ( !hAdvApi32 )
                     hAdvApi32 = LoadLibrary("advapi32.dll");
                 if (hAdvApi32)
-                    (FARPROC) p_RegOpenCurrentUser =
+                     p_RegOpenCurrentUser =
                         GetProcAddress( hAdvApi32, "RegOpenCurrentUser");
             }
             if (p_RegOpenCurrentUser)
@@ -170,7 +170,7 @@
                 if ( !hAdvApi32 )
                     hAdvApi32 = LoadLibrary("advapi32.dll");
                 if (hAdvApi32)
-                    (FARPROC) p_RegOpenCurrentUser =
+                     p_RegOpenCurrentUser =
                         GetProcAddress( hAdvApi32, "RegOpenCurrentUser");
             }
             if (p_RegOpenCurrentUser)
@@ -239,7 +239,7 @@
                 if ( !hAdvApi32 )
                     hAdvApi32 = LoadLibrary("advapi32.dll");
                 if (hAdvApi32)
-                    (FARPROC) p_RegOpenCurrentUser =
+                     p_RegOpenCurrentUser =
                         GetProcAddress( hAdvApi32, "RegOpenCurrentUser");
             }
             if (p_RegOpenCurrentUser)
@@ -313,7 +313,7 @@
             if ( !hAdvApi32 )
                 hAdvApi32 = LoadLibrary("advapi32.dll");
             if (hAdvApi32)
-                (FARPROC) p_RegOpenCurrentUser =
+                 p_RegOpenCurrentUser =
                     GetProcAddress( hAdvApi32, "RegOpenCurrentUser");
         }
         if (p_RegOpenCurrentUser)
@@ -386,7 +386,7 @@
             if ( !hAdvApi32 )
                 hAdvApi32 = LoadLibrary("advapi32.dll");
             if (hAdvApi32)
-                (FARPROC) p_RegOpenCurrentUser =
+                 p_RegOpenCurrentUser =
                     GetProcAddress( hAdvApi32, "RegOpenCurrentUser");
         }
         if (p_RegOpenCurrentUser)
diff -Nruiw src.orig/ckossl.c src.farproc/ckossl.c
--- src.orig/ckossl.c	2011-07-19 17:14:10.000000000 -0400
+++ src.farproc/ckossl.c	2013-11-19 22:27:43.265128158 -0500
@@ -983,126 +983,126 @@
         debug(F111, "OpenSSL LoadLibrary failed","SSLEAY32",rc) ;
         return(0);
     } else {
-        if (((FARPROC) p_SSL_get_error =
+        if (( p_SSL_get_error =
               GetProcAddress( hSSL, "SSL_get_error" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_get_error",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_read =
+        if (( p_SSL_read =
               GetProcAddress( hSSL, "SSL_read" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_read",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_peek =
+        if (( p_SSL_peek =
               GetProcAddress( hSSL, "SSL_peek" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_peek",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_connect =
+        if (( p_SSL_connect =
               GetProcAddress( hSSL, "SSL_connect" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_connect",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_set_fd =
+        if (( p_SSL_set_fd =
               GetProcAddress( hSSL, "SSL_set_fd" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_set_fd",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_free =
+        if (( p_SSL_free =
               GetProcAddress( hSSL, "SSL_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_shutdown =
+        if (( p_SSL_shutdown =
               GetProcAddress( hSSL, "SSL_shutdown" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_shutdown",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_write =
+        if (( p_SSL_write =
               GetProcAddress( hSSL, "SSL_write" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_write",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_pending =
+        if (( p_SSL_pending =
               GetProcAddress( hSSL, "SSL_pending" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_pending",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_load_error_strings =
+        if (( p_SSL_load_error_strings =
               GetProcAddress( hSSL, "SSL_load_error_strings" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_load_error_strings",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_peer_certificate =
+        if (( p_SSL_get_peer_certificate =
               GetProcAddress( hSSL, "SSL_get_peer_certificate" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_get_peer_certificate",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CIPHER_get_name =
+        if (( p_SSL_CIPHER_get_name =
               GetProcAddress( hSSL, "SSL_CIPHER_get_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CIPHER_get_name",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CIPHER_get_bits =
+        if (( p_SSL_CIPHER_get_bits =
               GetProcAddress( hSSL, "SSL_CIPHER_get_bits" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CIPHER_get_bits",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CIPHER_get_version =
+        if (( p_SSL_CIPHER_get_version =
               GetProcAddress( hSSL, "SSL_CIPHER_get_version" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CIPHER_get_version",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_current_cipher =
+        if (( p_SSL_get_current_cipher =
               GetProcAddress( hSSL, "SSL_get_current_cipher" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_get_current_cipher",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_shared_ciphers =
+        if (( p_SSL_get_shared_ciphers =
               GetProcAddress( hSSL, "SSL_get_shared_ciphers" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_get_shared_ciphers",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_ciphers =
+        if (( p_SSL_get_ciphers =
               GetProcAddress( hSSL, "SSL_get_ciphers" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_get_ciphers",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_cipher_list =
+        if (( p_SSL_get_cipher_list =
               GetProcAddress( hSSL, "SSL_get_cipher_list" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1110,7 +1110,7 @@
                    "SSL_get_cipher_list",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_set_default_verify_paths =
+        if (( p_SSL_CTX_set_default_verify_paths =
               GetProcAddress( hSSL, "SSL_CTX_set_default_verify_paths" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1118,34 +1118,34 @@
                    "SSL_CTX_set_default_verify_paths",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_use_RSAPrivateKey_file =
+        if (( p_SSL_use_RSAPrivateKey_file =
               GetProcAddress( hSSL, "SSL_use_RSAPrivateKey_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_use_RSAPrivateKey_file",rc);
         }
-        if (((FARPROC) p_SSL_use_PrivateKey_file =
+        if (( p_SSL_use_PrivateKey_file =
               GetProcAddress( hSSL, "SSL_use_PrivateKey_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_use_PrivateKey_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_use_certificate_file =
+        if (( p_SSL_use_certificate_file =
               GetProcAddress( hSSL, "SSL_use_certificate_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_use_certificate_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_use_PrivateKey_file =
+        if (( p_SSL_CTX_use_PrivateKey_file =
               GetProcAddress( hSSL, "SSL_CTX_use_PrivateKey_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_use_PrivateKey_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_use_certificate_file =
+        if (( p_SSL_CTX_use_certificate_file =
               GetProcAddress( hSSL, "SSL_CTX_use_certificate_file" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1153,7 +1153,7 @@
                    "SSL_CTX_use_certificate_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_use_certificate_chain_file =
+        if (( p_SSL_CTX_use_certificate_chain_file =
               GetProcAddress( hSSL, "SSL_CTX_use_certificate_chain_file" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1161,7 +1161,7 @@
                    "SSL_CTX_use_certificate_chain_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_check_private_key =
+        if (( p_SSL_CTX_check_private_key =
               GetProcAddress( hSSL, "SSL_CTX_check_private_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1169,7 +1169,7 @@
                    "SSL_CTX_check_private_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_check_private_key =
+        if (( p_SSL_check_private_key =
               GetProcAddress( hSSL, "SSL_check_private_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1177,68 +1177,68 @@
                    "SSL_check_private_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_set_verify =
+        if (( p_SSL_set_verify =
               GetProcAddress( hSSL, "SSL_set_verify" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_set_verify",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_set_verify =
+        if (( p_SSL_CTX_set_verify =
               GetProcAddress( hSSL, "SSL_CTX_set_verify" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_set_verify",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_new =
+        if (( p_SSL_new =
               GetProcAddress( hSSL, "SSL_new" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_ctrl =
+        if (( p_SSL_CTX_ctrl =
               GetProcAddress( hSSL, "SSL_CTX_ctrl" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_ctrl",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_new =
+        if (( p_SSL_CTX_new =
               GetProcAddress( hSSL, "SSL_CTX_new" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_free =
+        if (( p_SSL_CTX_free =
               GetProcAddress( hSSL, "SSL_CTX_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_set_default_passwd_cb =
+        if (( p_SSL_CTX_set_default_passwd_cb =
               GetProcAddress( hSSL, "SSL_CTX_set_default_passwd_cb" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_CTX_set_default_passwd_cb",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSLv23_method =
+        if (( p_SSLv23_method =
               GetProcAddress( hSSL, "SSLv23_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv23_method",rc);
         }
-        if (((FARPROC) p_SSLv3_method =
+        if (( p_SSLv3_method =
               GetProcAddress( hSSL, "SSLv3_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv3_method",rc);
         }
-        if (((FARPROC) p_TLSv1_method =
+        if (( p_TLSv1_method =
               GetProcAddress( hSSL, "TLSv1_method" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1246,38 +1246,38 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_SSLv23_client_method =
+        if (( p_SSLv23_client_method =
               GetProcAddress( hSSL, "SSLv23_client_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv23_client_method",rc);
         }
-        if (((FARPROC) p_SSLv3_client_method =
+        if (( p_SSLv3_client_method =
               GetProcAddress( hSSL, "SSLv3_client_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv3_client_method",rc);
         }
-        if (((FARPROC) p_TLSv1_client_method =
+        if (( p_TLSv1_client_method =
               GetProcAddress( hSSL, "TLSv1_client_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","TLSv1_client_method",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSLv23_server_method =
+        if (( p_SSLv23_server_method =
               GetProcAddress( hSSL, "SSLv23_server_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv23_server_method",rc);
         }
-        if (((FARPROC) p_SSLv3_server_method =
+        if (( p_SSLv3_server_method =
               GetProcAddress( hSSL, "SSLv3_server_method" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSLv3_server_method",rc);
         }
-        if (((FARPROC) p_TLSv1_server_method =
+        if (( p_TLSv1_server_method =
               GetProcAddress( hSSL, "TLSv1_server_method" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1285,12 +1285,12 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_SSL_library_init =
+        if (( p_SSL_library_init =
               GetProcAddress( hSSL, "SSL_library_init" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_library_init",rc);
-            if (((FARPROC) p_SSL_library_init =
+            if (( p_SSL_library_init =
               GetProcAddress( hSSL, "OpenSSL_add_ssl_algorithms" )) == NULL )
             {
                 rc = GetLastError() ;
@@ -1299,49 +1299,49 @@
                 load_error = 1;
             }
         }
-        if (((FARPROC) p_SSL_state_string =
+        if (( p_SSL_state_string =
               GetProcAddress( hSSL, "SSL_state_string" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_state_string",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_state_string_long =
+        if (( p_SSL_state_string_long =
               GetProcAddress( hSSL, "SSL_state_string_long" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_state_string_long",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_accept =
+        if (( p_SSL_accept =
               GetProcAddress( hSSL, "SSL_accept" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_accept",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_set_cipher_list =
+        if (( p_SSL_set_cipher_list =
               GetProcAddress( hSSL, "SSL_set_cipher_list" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed","SSL_set_cipher_list",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_set_tmp_rsa_callback =
+        if (( p_SSL_CTX_set_tmp_rsa_callback =
               GetProcAddress( hSSL, "SSL_CTX_set_tmp_rsa_callback" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_CTX_set_tmp_rsa_callback",rc);
         }
-        if (((FARPROC) p_SSL_set_tmp_rsa_callback =
+        if (( p_SSL_set_tmp_rsa_callback =
               GetProcAddress( hSSL, "SSL_set_tmp_rsa_callback" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_set_tmp_rsa_callback",rc);
         }
-        if (((FARPROC) p_SSL_CTX_set_tmp_dh_callback =
+        if (( p_SSL_CTX_set_tmp_dh_callback =
               GetProcAddress( hSSL, "SSL_CTX_set_tmp_dh_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1349,7 +1349,7 @@
                    "SSL_CTX_set_tmp_dh_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_set_tmp_dh_callback =
+        if (( p_SSL_set_tmp_dh_callback =
               GetProcAddress( hSSL, "SSL_set_tmp_dh_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1357,7 +1357,7 @@
                    "SSL_set_tmp_dh_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_load_verify_locations =
+        if (( p_SSL_CTX_load_verify_locations =
               GetProcAddress( hSSL, "SSL_CTX_load_verify_locations" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1365,7 +1365,7 @@
                    "SSL_CTX_load_verify_locations",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_CTX_set_default_passwd_cb_userdata =
+        if (( p_SSL_CTX_set_default_passwd_cb_userdata =
               GetProcAddress( hSSL,
                     "SSL_CTX_set_default_passwd_cb_userdata" )) == NULL )
         {
@@ -1374,7 +1374,7 @@
                    "SSL_CTX_set_default_passwd_cb_userdata",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_wbio =
+        if (( p_SSL_get_wbio =
               GetProcAddress( hSSL, "SSL_get_wbio" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1382,91 +1382,91 @@
                    "SSL_get_wbio",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSL_get_finished =
+        if (( p_SSL_get_finished =
               GetProcAddress( hSSL, "SSL_get_finished" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_get_finished",rc);
         }
-        if (((FARPROC) p_SSL_get_peer_finished =
+        if (( p_SSL_get_peer_finished =
               GetProcAddress( hSSL, "SSL_get_peer_finished" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_get_peer_finished",rc);
         }
-        if (((FARPROC) p_SSL_copy_session_id =
+        if (( p_SSL_copy_session_id =
               GetProcAddress( hSSL, "SSL_copy_session_id" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_copy_session_id",rc);
         }
-        if (((FARPROC) p_SSL_renegotiate =
+        if (( p_SSL_renegotiate =
               GetProcAddress( hSSL, "SSL_renegotiate" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_renegotiate",rc);
         }
-        if (((FARPROC) p_SSL_get_session =
+        if (( p_SSL_get_session =
               GetProcAddress( hSSL, "SSL_get_session" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_get_session",rc);
         }
-        if (((FARPROC) p_SSL_set_session =
+        if (( p_SSL_set_session =
               GetProcAddress( hSSL, "SSL_set_session" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_set_session",rc);
         }
-        if (((FARPROC) p_SSL_CTX_set_session_id_context =
+        if (( p_SSL_CTX_set_session_id_context =
               GetProcAddress( hSSL, "SSL_CTX_set_session_id_context" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                   "SSL_CTX_set_session_id_context",rc);
         }
-        if (((FARPROC) p_SSL_get_privatekey =
+        if (( p_SSL_get_privatekey =
               GetProcAddress( hSSL, "SSL_get_priavatekey" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_get_privatekey",rc);
         }
-        if (((FARPROC) p_SSL_get_certificate =
+        if (( p_SSL_get_certificate =
               GetProcAddress( hSSL, "SSL_get_certificate" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_get_certificate",rc);
         }
-        if (((FARPROC) p_SSL_clear =
+        if (( p_SSL_clear =
               GetProcAddress( hSSL, "SSL_clear" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_clear",rc);
         }
-        if (((FARPROC) p_SSL_set_accept_state =
+        if (( p_SSL_set_accept_state =
               GetProcAddress( hSSL, "SSL_set_accept_state" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_set_accept_state",rc);
         }
-        if (((FARPROC) p_SSL_CIPHER_description =
+        if (( p_SSL_CIPHER_description =
               GetProcAddress( hSSL, "SSL_CIPHER_description" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "SSL_CIPHER_description",rc);
         }
-        if (((FARPROC) p_SSL_CTX_set_info_callback =
+        if (( p_SSL_CTX_set_info_callback =
               GetProcAddress( hSSL, "SSL_CTX_set_info_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1475,28 +1475,28 @@
         }
 
 #ifdef SSL_KRB5
-        if (((FARPROC) p_kssl_ctx_new =
+        if (( p_kssl_ctx_new =
               GetProcAddress( hSSL, "kssl_ctx_new" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "kssl_ctx_new",rc);
         }
-        if (((FARPROC) p_kssl_ctx_free =
+        if (( p_kssl_ctx_free =
               GetProcAddress( hSSL, "kssl_ctx_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "kssl_ctx_free",rc);
         }
-        if (((FARPROC) p_kssl_ctx_setstring =
+        if (( p_kssl_ctx_setstring =
               GetProcAddress( hSSL, "kssl_ctx_setstring" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL SSL GetProcAddress failed",
                    "kssl_ctx_setstring",rc);
         }
-        if (((FARPROC) p_kssl_ctx_setprinc =
+        if (( p_kssl_ctx_setprinc =
               GetProcAddress( hSSL, "kssl_ctx_setprinc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1504,7 +1504,7 @@
                    "kssl_ctx_setprinc",rc);
         }
 #endif /* SSL_KRB5 */
-        if (((FARPROC) p_SSL_COMP_add_compression_method =
+        if (( p_SSL_COMP_add_compression_method =
               GetProcAddress( hSSL, "SSL_COMP_add_compression_method" )) == NULL )
         {
             rc = GetLastError() ;
@@ -1994,13 +1994,13 @@
 #ifdef NT
     hX5092UID = LoadLibrary("X5092UID");
     if ( hX5092UID ) {
-        if (((FARPROC) p_X509_to_user =
+        if (( p_X509_to_user =
               GetProcAddress( hX5092UID, "X509_to_user" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"X5092UID GetProcAddress failed","X509_to_user",rc);
         }
-        if (((FARPROC) p_X509_userok =
+        if (( p_X509_userok =
               GetProcAddress( hX5092UID, "X509_userok" )) == NULL )
         {
             rc = GetLastError() ;
diff -Nruiw src.orig/ckosslc.c src.farproc/ckosslc.c
--- src.orig/ckosslc.c	2007-02-27 12:50:30.000000000 -0500
+++ src.farproc/ckosslc.c	2013-11-19 22:27:43.273128158 -0500
@@ -2532,160 +2532,160 @@
         debug(F111, "OpenSSL LoadLibrary failed","LIBEAY32",rc) ;
         return(0);
     } else {
-        if (((FARPROC) p_ERR_print_errors =
+        if (( p_ERR_print_errors =
               GetProcAddress( hCRYPTO, "ERR_print_errors" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","ERR_print_errors",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ERR_print_errors_fp =
+        if (( p_ERR_print_errors_fp =
               GetProcAddress( hCRYPTO, "ERR_print_errors_fp" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","ERR_print_errors_fp",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ERR_get_error =
+        if (( p_ERR_get_error =
               GetProcAddress( hCRYPTO, "ERR_get_error" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","ERR_get_error",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ERR_error_string =
+        if (( p_ERR_error_string =
               GetProcAddress( hCRYPTO, "ERR_error_string" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","ERR_error_string",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_printf =
+        if (( p_BIO_printf =
               GetProcAddress( hCRYPTO, "BIO_printf" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_printf",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_ctrl =
+        if (( p_BIO_ctrl =
               GetProcAddress( hCRYPTO, "BIO_ctrl" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_ctrl",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_new =
+        if (( p_BIO_new =
               GetProcAddress( hCRYPTO, "BIO_new" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_s_file =
+        if (( p_BIO_s_file =
               GetProcAddress( hCRYPTO, "BIO_s_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_s_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_s_mem =
+        if (( p_BIO_s_mem =
               GetProcAddress( hCRYPTO, "BIO_s_mem" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_s_mem",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_s_null =
+        if (( p_BIO_s_null =
               GetProcAddress( hCRYPTO, "BIO_s_null" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_s_null",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_read =
+        if (( p_BIO_read =
               GetProcAddress( hCRYPTO, "BIO_read" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_read",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_write =
+        if (( p_BIO_write =
               GetProcAddress( hCRYPTO, "BIO_write" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_write",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_free =
+        if (( p_BIO_free =
               GetProcAddress( hCRYPTO, "BIO_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_free_all =
+        if (( p_BIO_free_all =
               GetProcAddress( hCRYPTO, "BIO_free_all" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_free_all",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BIO_new_file =
+        if (( p_BIO_new_file =
               GetProcAddress( hCRYPTO, "BIO_new_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","BIO_new_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_issuer_name =
+        if (( p_X509_get_issuer_name =
               GetProcAddress( hCRYPTO, "X509_get_issuer_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_get_issuer_name",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_print_ex =
+        if (( p_X509_print_ex =
               GetProcAddress( hCRYPTO, "X509_print_ex" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_print_ex",rc);
         }
-        if (((FARPROC) p_X509_verify_cert_error_string =
+        if (( p_X509_verify_cert_error_string =
               GetProcAddress( hCRYPTO, "X509_verify_cert_error_string" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_verify_cert_error_string",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_NAME_oneline =
+        if (( p_X509_NAME_oneline =
               GetProcAddress( hCRYPTO, "X509_NAME_oneline" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_NAME_oneline",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_NAME_print_ex =
+        if (( p_X509_NAME_print_ex =
               GetProcAddress( hCRYPTO, "X509_NAME_print_ex" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_NAME_print_ex",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_NAME_get_text_by_NID =
+        if (( p_X509_NAME_get_text_by_NID =
               GetProcAddress( hCRYPTO, "X509_NAME_get_text_by_NID" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_NAME_get_text_by_NID",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_subject_name =
+        if (( p_X509_get_subject_name =
               GetProcAddress( hCRYPTO, "X509_get_subject_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_get_subject_name",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_new =
+        if (( p_X509_STORE_CTX_new =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_new" )) == NULL )
         {
             /* New to 0.9.5 */
@@ -2693,7 +2693,7 @@
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "X509_STORE_CTX_new",rc);
         }
-        if (((FARPROC) p_X509_STORE_CTX_free =
+        if (( p_X509_STORE_CTX_free =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_free" )) == NULL )
         {
             /* New to 0.9.5 */
@@ -2701,7 +2701,7 @@
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "X509_STORE_CTX_free",rc);
         }
-        if (((FARPROC) p_X509_STORE_CTX_get_current_cert =
+        if (( p_X509_STORE_CTX_get_current_cert =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_get_current_cert" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2709,7 +2709,7 @@
                    "X509_STORE_CTX_get_current_cert",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_get_error =
+        if (( p_X509_STORE_CTX_get_error =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_get_error" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2717,7 +2717,7 @@
                    "X509_STORE_CTX_get_error",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_get_error_depth =
+        if (( p_X509_STORE_CTX_get_error_depth =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_get_error_depth" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2725,82 +2725,82 @@
                    "X509_STORE_CTX_get_error_depth",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_free =
+        if (( p_X509_free =
               GetProcAddress( hCRYPTO, "X509_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_default_cert_dir =
+        if (( p_X509_get_default_cert_dir =
               GetProcAddress( hCRYPTO, "X509_get_default_cert_dir" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","X509_get_default_cert_dir",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_free =
+        if (( p_RSA_free =
               GetProcAddress( hCRYPTO, "RSA_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","RSA_free",rc);
         }
-        if (((FARPROC) p_RSA_generate_key =
+        if (( p_RSA_generate_key =
               GetProcAddress( hCRYPTO, "RSA_generate_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","RSA_generate_key",rc);
         }
-        if (((FARPROC) p_DH_new =
+        if (( p_DH_new =
               GetProcAddress( hCRYPTO, "DH_new" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DH_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DH_free =
+        if (( p_DH_free =
               GetProcAddress( hCRYPTO, "DH_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DH_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DH_generate_parameters =
+        if (( p_DH_generate_parameters =
               GetProcAddress( hCRYPTO, "DH_generate_parameters" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DH_generate_parameters",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DH_generate_key =
+        if (( p_DH_generate_key =
               GetProcAddress( hCRYPTO, "DH_generate_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DH_generate_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_free =
+        if (( p_DSA_free =
               GetProcAddress( hCRYPTO, "DSA_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DSA_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_generate_parameters =
+        if (( p_DSA_generate_parameters =
               GetProcAddress( hCRYPTO, "DSA_generate_parameters" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DSA_generate_parameters",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_generate_key =
+        if (( p_DSA_generate_key =
               GetProcAddress( hCRYPTO, "DSA_generate_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed","DSA_generate_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_d2i_DHparams =
+        if (( p_d2i_DHparams =
               GetProcAddress( hCRYPTO, "d2i_DHparams" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2808,7 +2808,7 @@
                    "d2i_DHparams",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_ASN1_read_bio =
+        if (( p_PEM_ASN1_read_bio =
               GetProcAddress( hCRYPTO, "PEM_ASN1_read_bio" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2816,7 +2816,7 @@
                    "PEM_ASN1_read_bio",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_bin2bn =
+        if (( p_BN_bin2bn =
               GetProcAddress( hCRYPTO, "BN_bin2bn" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2824,7 +2824,7 @@
                    "BN_bin2bn",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ASN1_TIME_print =
+        if (( p_ASN1_TIME_print =
               GetProcAddress( hCRYPTO, "ASN1_TIME_print" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2833,7 +2833,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_sk_GENERAL_NAME_free =
+        if (( p_sk_GENERAL_NAME_free =
               GetProcAddress( hCRYPTO, "sk_GENERAL_NAME_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2841,7 +2841,7 @@
                    "sk_GENERAL_NAME_free",rc);
             /* no longer exported in 0.9.6 */
         }
-        if (((FARPROC) p_X509V3_EXT_cleanup =
+        if (( p_X509V3_EXT_cleanup =
               GetProcAddress( hCRYPTO, "X509V3_EXT_cleanup" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2849,7 +2849,7 @@
                    "X509V3_EXT_cleanup",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_sk_GENERAL_NAME_value =
+        if (( p_sk_GENERAL_NAME_value =
               GetProcAddress( hCRYPTO, "sk_GENERAL_NAME_value" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2857,7 +2857,7 @@
                    "sk_GENERAL_NAME_value",rc);
             /* no longer exported in 0.9.6 */
         }
-        if (((FARPROC) p_sk_GENERAL_NAME_num =
+        if (( p_sk_GENERAL_NAME_num =
               GetProcAddress( hCRYPTO, "sk_GENERAL_NAME_num" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2865,7 +2865,7 @@
                    "sk_GENERAL_NAME_num",rc);
             /* no longer exported in 0.9.6 */
         }
-        if (((FARPROC) p_X509V3_EXT_d2i =
+        if (( p_X509V3_EXT_d2i =
               GetProcAddress( hCRYPTO, "X509V3_EXT_d2i" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2873,7 +2873,7 @@
                    "X509V3_EXT_d2i",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509V3_add_standard_extensions =
+        if (( p_X509V3_add_standard_extensions =
               GetProcAddress( hCRYPTO, "X509V3_add_standard_extensions" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2881,7 +2881,7 @@
                    "X509V3_add_standard_extensions",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_ext =
+        if (( p_X509_get_ext =
               GetProcAddress( hCRYPTO, "X509_get_ext" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2889,7 +2889,7 @@
                    "X509_get_ext",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_ext_by_NID =
+        if (( p_X509_get_ext_by_NID =
               GetProcAddress( hCRYPTO, "X509_get_ext_by_NID" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2897,7 +2897,7 @@
                    "X509_get_ext_by_NID",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ASN1_INTEGER_get =
+        if (( p_ASN1_INTEGER_get =
               GetProcAddress( hCRYPTO, "ASN1_INTEGER_get" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2905,7 +2905,7 @@
                    "ASN1_INTEGER_get",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ASN1_INTEGER_cmp =
+        if (( p_ASN1_INTEGER_cmp =
               GetProcAddress( hCRYPTO, "ASN1_INTEGER_cmp" )) == NULL )
         {
             /* New to OpenSSL 0.9.5 */
@@ -2913,7 +2913,7 @@
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "ASN1_INTEGER_cmp",rc);
         }
-        if (((FARPROC) p_ASN1_STRING_cmp =
+        if (( p_ASN1_STRING_cmp =
               GetProcAddress( hCRYPTO, "ASN1_STRING_cmp" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2921,7 +2921,7 @@
                    "ASN1_STRING_cmp",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_serialNumber =
+        if (( p_X509_get_serialNumber =
               GetProcAddress( hCRYPTO, "X509_get_serialNumber" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2929,7 +2929,7 @@
                    "X509_get_serialNumber",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_sk_X509_REVOKED_value =
+        if (( p_sk_X509_REVOKED_value =
               GetProcAddress( hCRYPTO, "sk_X509_REVOKED_value" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2937,7 +2937,7 @@
                    "sk_X509_REVOKED_value",rc);
             /* no longer exported in 0.9.6 */
         }
-        if (((FARPROC) p_sk_X509_REVOKED_num =
+        if (( p_sk_X509_REVOKED_num =
               GetProcAddress( hCRYPTO, "sk_X509_REVOKED_num" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2945,7 +2945,7 @@
                    "sk_X509_REVOKED_num",rc);
             /* no longer exported in 0.9.6 */
         }
-        if (((FARPROC) p_X509_cmp_current_time =
+        if (( p_X509_cmp_current_time =
               GetProcAddress( hCRYPTO, "X509_cmp_current_time" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2953,7 +2953,7 @@
                    "X509_cmp_current_time",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_OBJECT_free_contents =
+        if (( p_X509_OBJECT_free_contents =
               GetProcAddress( hCRYPTO, "X509_OBJECT_free_contents" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2961,7 +2961,7 @@
                    "X509_OBJECT_free_contents",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_set_error =
+        if (( p_X509_STORE_CTX_set_error =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_set_error" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2969,7 +2969,7 @@
                    "X509_STORE_CTX_set_error",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_CRL_verify =
+        if (( p_X509_CRL_verify =
               GetProcAddress( hCRYPTO, "X509_CRL_verify" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2977,7 +2977,7 @@
                    "X509_CRL_verify",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_pubkey =
+        if (( p_X509_get_pubkey =
               GetProcAddress( hCRYPTO, "X509_get_pubkey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2985,7 +2985,7 @@
                    "X509_get_pubkey",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_cleanup =
+        if (( p_X509_STORE_CTX_cleanup =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_cleanup" )) == NULL )
         {
             rc = GetLastError() ;
@@ -2993,7 +2993,7 @@
                    "X509_STORE_CTX_cleanup",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_get_by_subject =
+        if (( p_X509_STORE_get_by_subject =
               GetProcAddress( hCRYPTO, "X509_STORE_get_by_subject" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3001,7 +3001,7 @@
                    "X509_STORE_get_by_subject",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_CTX_init =
+        if (( p_X509_STORE_CTX_init =
               GetProcAddress( hCRYPTO, "X509_STORE_CTX_init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3009,7 +3009,7 @@
                    "X509_STORE_CTX_init",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_read_X509 =
+        if (( p_PEM_read_X509 =
               GetProcAddress( hCRYPTO, "PEM_read_X509" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3017,7 +3017,7 @@
                    "PEM_read_X509",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_LOOKUP_hash_dir =
+        if (( p_X509_LOOKUP_hash_dir =
               GetProcAddress( hCRYPTO, "X509_LOOKUP_hash_dir" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3025,7 +3025,7 @@
                    "X509_LOOKUP_hash_dir",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_LOOKUP_ctrl =
+        if (( p_X509_LOOKUP_ctrl =
               GetProcAddress( hCRYPTO, "X509_LOOKUP_ctrl" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3033,7 +3033,7 @@
                    "X509_LOOKUP_ctrl",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_add_lookup =
+        if (( p_X509_STORE_add_lookup =
               GetProcAddress( hCRYPTO, "X509_STORE_add_lookup" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3041,7 +3041,7 @@
                    "X509_STORE_add_lookup",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_LOOKUP_file =
+        if (( p_X509_LOOKUP_file =
               GetProcAddress( hCRYPTO, "X509_LOOKUP_file" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3049,7 +3049,7 @@
                    "X509_LOOKUP_file",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_new =
+        if (( p_X509_STORE_new =
               GetProcAddress( hCRYPTO, "X509_STORE_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3057,7 +3057,7 @@
                    "X509_STORE_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_free =
+        if (( p_X509_STORE_free =
               GetProcAddress( hCRYPTO, "X509_STORE_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3065,7 +3065,7 @@
                    "X509_STORE_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_load_locations =
+        if (( p_X509_STORE_load_locations =
               GetProcAddress( hCRYPTO, "X509_STORE_load_locations" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3073,7 +3073,7 @@
                    "X509_STORE_load_locations",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_STORE_set_default_paths =
+        if (( p_X509_STORE_set_default_paths =
               GetProcAddress( hCRYPTO, "X509_STORE_set_default_paths" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3081,7 +3081,7 @@
                    "X509_STORE_set_default_paths",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_subject_name_hash =
+        if (( p_X509_subject_name_hash =
               GetProcAddress( hCRYPTO, "X509_subject_name_hash" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3089,7 +3089,7 @@
                    "X509_subject_name_hash",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_issuer_name_hash =
+        if (( p_X509_issuer_name_hash =
               GetProcAddress( hCRYPTO, "X509_issuer_name_hash" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3097,7 +3097,7 @@
                    "X509_issuer_name_hash",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_set_mem_functions =
+        if (( p_CRYPTO_set_mem_functions =
               GetProcAddress( hCRYPTO, "CRYPTO_set_mem_functions" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3105,7 +3105,7 @@
                    "CRYPTO_set_mem_functions",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_set_locking_callback =
+        if (( p_CRYPTO_set_locking_callback =
               GetProcAddress( hCRYPTO, "CRYPTO_set_locking_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3113,7 +3113,7 @@
                    "CRYPTO_set_locking_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_set_dynlock_destroy_callback =
+        if (( p_CRYPTO_set_dynlock_destroy_callback =
               GetProcAddress( hCRYPTO, "CRYPTO_set_dynlock_destroy_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3121,7 +3121,7 @@
                    "CRYPTO_set_dynlock_destroy_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_set_dynlock_create_callback =
+        if (( p_CRYPTO_set_dynlock_create_callback =
               GetProcAddress( hCRYPTO, "CRYPTO_set_dynlock_create_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3129,7 +3129,7 @@
                    "CRYPTO_set_dynlock_create_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_set_dynlock_lock_callback =
+        if (( p_CRYPTO_set_dynlock_lock_callback =
               GetProcAddress( hCRYPTO, "CRYPTO_set_dynlock_lock_callback" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3137,77 +3137,77 @@
                    "CRYPTO_set_dynlock_lock_callback",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_num_locks =
+        if (( p_CRYPTO_num_locks =
               GetProcAddress( hCRYPTO, "CRYPTO_num_locks" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "CRYPTO_num_locks",rc);
         }
-        if (((FARPROC) p_RAND_screen =
+        if (( p_RAND_screen =
               GetProcAddress( hCRYPTO, "RAND_screen" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_screen",rc);
         }
-        if (((FARPROC) p_RAND_status =
+        if (( p_RAND_status =
               GetProcAddress( hCRYPTO, "RAND_status" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_status",rc);
         }
-        if (((FARPROC) p_RAND_file_name =
+        if (( p_RAND_file_name =
               GetProcAddress( hCRYPTO, "RAND_file_name" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_file_name",rc);
         }
-        if (((FARPROC) p_RAND_egd =
+        if (( p_RAND_egd =
               GetProcAddress( hCRYPTO, "RAND_egd" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_egd",rc);
         }
-        if (((FARPROC) p_RAND_load_file =
+        if (( p_RAND_load_file =
               GetProcAddress( hCRYPTO, "RAND_load_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_load_file",rc);
         }
-        if (((FARPROC) p_RAND_write_file =
+        if (( p_RAND_write_file =
               GetProcAddress( hCRYPTO, "RAND_write_file" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_write_file",rc);
         }
-        if (((FARPROC) p_RAND_seed =
+        if (( p_RAND_seed =
               GetProcAddress( hCRYPTO, "RAND_seed" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "RAND_seed",rc);
         }
-        if (((FARPROC) p_sk_num =
+        if (( p_sk_num =
               GetProcAddress( hCRYPTO, "sk_num" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "sk_num",rc);
         }
-        if (((FARPROC) p_sk_value =
+        if (( p_sk_value =
               GetProcAddress( hCRYPTO, "sk_value" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "sk_value",rc);
         }
-        if (((FARPROC) p_sk_free =
+        if (( p_sk_free =
               GetProcAddress( hCRYPTO, "sk_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3215,7 +3215,7 @@
                    "sk_free",rc);
         }
 #ifdef ZLIB
-        if (((FARPROC) p_COMP_zlib =
+        if (( p_COMP_zlib =
               GetProcAddress( hCRYPTO, "COMP_zlib" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3223,35 +3223,35 @@
                    "COMP_zlib",rc);
         }
 #endif /* ZLIB */
-        if (((FARPROC) p_COMP_rle =
+        if (( p_COMP_rle =
               GetProcAddress( hCRYPTO, "COMP_rle" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "COMP_rle",rc);
         }
-        if (((FARPROC) p_ERR_peek_error =
+        if (( p_ERR_peek_error =
               GetProcAddress( hCRYPTO, "ERR_peek_error" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "ERR_peek_error",rc);
         }
-        if (((FARPROC) p_sk_pop_free =
+        if (( p_sk_pop_free =
               GetProcAddress( hCRYPTO, "sk_pop_free" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "sk_pop_free",rc);
         }
-        if (((FARPROC) p_PEM_read_bio_X509 =
+        if (( p_PEM_read_bio_X509 =
               GetProcAddress( hCRYPTO, "PEM_read_bio_X509" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "PEM_read_bio_X509",rc);
         }
-        if (((FARPROC) p_SSLeay =
+        if (( p_SSLeay =
               GetProcAddress( hCRYPTO, "SSLeay" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3259,7 +3259,7 @@
                    "SSLeay",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SSLeay_version =
+        if (( p_SSLeay_version =
               GetProcAddress( hCRYPTO, "SSLeay_version" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3268,7 +3268,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_SHA1_Init =
+        if (( p_SHA1_Init =
               GetProcAddress( hCRYPTO, "SHA1_Init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3276,7 +3276,7 @@
                    "SHA1_Init",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SHA1_Update =
+        if (( p_SHA1_Update =
               GetProcAddress( hCRYPTO, "SHA1_Update" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3284,7 +3284,7 @@
                    "SHA1_Update",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_SHA1_Final =
+        if (( p_SHA1_Final =
               GetProcAddress( hCRYPTO, "SHA1_Final" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3293,7 +3293,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_BN_new =
+        if (( p_BN_new =
               GetProcAddress( hCRYPTO, "BN_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3301,7 +3301,7 @@
                    "BN_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_dup =
+        if (( p_BN_dup =
               GetProcAddress( hCRYPTO, "BN_dup" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3309,7 +3309,7 @@
                    "BN_dup",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_bn2bin =
+        if (( p_BN_bn2bin =
               GetProcAddress( hCRYPTO, "BN_bn2bin" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3317,7 +3317,7 @@
                    "BN_bn2bin",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_num_bits =
+        if (( p_BN_num_bits =
               GetProcAddress( hCRYPTO, "BN_num_bits" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3325,7 +3325,7 @@
                    "BN_num_bits",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_cmp =
+        if (( p_BN_cmp =
               GetProcAddress( hCRYPTO, "BN_cmp" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3333,7 +3333,7 @@
                    "BN_cmp",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_ucmp =
+        if (( p_BN_ucmp =
               GetProcAddress( hCRYPTO, "BN_ucmp" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3341,7 +3341,7 @@
                    "BN_ucmp",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_add_word =
+        if (( p_BN_add_word =
               GetProcAddress( hCRYPTO, "BN_add_word" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3349,7 +3349,7 @@
                    "BN_add_word",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_mul_word =
+        if (( p_BN_mul_word =
               GetProcAddress( hCRYPTO, "BN_mul_word" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3357,7 +3357,7 @@
                    "BN_mul_word",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_lshift =
+        if (( p_BN_lshift =
               GetProcAddress( hCRYPTO, "BN_lshift" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3365,7 +3365,7 @@
                    "BN_lshift",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_set_word =
+        if (( p_BN_set_word =
               GetProcAddress( hCRYPTO, "BN_set_word" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3373,7 +3373,7 @@
                    "BN_set_word",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_dec2bn =
+        if (( p_BN_dec2bn =
               GetProcAddress( hCRYPTO, "BN_dec2bn" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3381,7 +3381,7 @@
                    "BN_dec2bn",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_bn2dec =
+        if (( p_BN_bn2dec =
               GetProcAddress( hCRYPTO, "BN_bn2dec" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3389,7 +3389,7 @@
                    "BN_bn2dec",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_copy =
+        if (( p_BN_copy =
               GetProcAddress( hCRYPTO, "BN_copy" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3397,7 +3397,7 @@
                    "BN_copy",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_CTX_free =
+        if (( p_BN_CTX_free =
               GetProcAddress( hCRYPTO, "BN_CTX_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3405,7 +3405,7 @@
                    "BN_CTX_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_div =
+        if (( p_BN_div =
               GetProcAddress( hCRYPTO, "BN_div" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3413,7 +3413,7 @@
                    "BN_div",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_sub =
+        if (( p_BN_sub =
               GetProcAddress( hCRYPTO, "BN_sub" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3421,7 +3421,7 @@
                    "BN_sub",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_value_one =
+        if (( p_BN_value_one =
               GetProcAddress( hCRYPTO, "BN_value_one" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3429,7 +3429,7 @@
                    "BN_value_one",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_CTX_new =
+        if (( p_BN_CTX_new =
               GetProcAddress( hCRYPTO, "BN_CTX_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3437,7 +3437,7 @@
                    "BN_CTX_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_CTX_get =
+        if (( p_BN_CTX_get =
               GetProcAddress( hCRYPTO, "BN_CTX_get" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3445,7 +3445,7 @@
                    "BN_CTX_get",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_CTX_start =
+        if (( p_BN_CTX_start =
               GetProcAddress( hCRYPTO, "BN_CTX_start" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3453,7 +3453,7 @@
                    "BN_CTX_start",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_CTX_end =
+        if (( p_BN_CTX_end =
               GetProcAddress( hCRYPTO, "BN_CTX_end" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3461,7 +3461,7 @@
                    "BN_CTX_end",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_free =
+        if (( p_BN_free =
               GetProcAddress( hCRYPTO, "BN_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3469,7 +3469,7 @@
                    "BN_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_hex2bn =
+        if (( p_BN_hex2bn =
               GetProcAddress( hCRYPTO, "BN_hex2bn" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3477,7 +3477,7 @@
                    "BN_hex2bn",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_is_bit_set =
+        if (( p_BN_is_bit_set =
               GetProcAddress( hCRYPTO, "BN_is_bit_set" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3485,7 +3485,7 @@
                    "BN_is_bit_set",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_rand =
+        if (( p_BN_rand =
               GetProcAddress( hCRYPTO, "BN_rand" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3493,7 +3493,7 @@
                    "BN_rand",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_bn2hex =
+        if (( p_BN_bn2hex =
               GetProcAddress( hCRYPTO, "BN_bn2hex" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3501,7 +3501,7 @@
                    "BN_bn2hex",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_add =
+        if (( p_BN_add =
               GetProcAddress( hCRYPTO, "BN_add" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3509,7 +3509,7 @@
                    "BN_add",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_mul =
+        if (( p_BN_mul =
               GetProcAddress( hCRYPTO, "BN_mul" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3517,14 +3517,14 @@
                    "BN_mul",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_mod =
+        if (( p_BN_mod =
               GetProcAddress( hCRYPTO, "BN_mod" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "BN_mod",rc);
         }
-        if (((FARPROC) p_BN_mod_word =
+        if (( p_BN_mod_word =
               GetProcAddress( hCRYPTO, "BN_mod_word" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3532,7 +3532,7 @@
                    "BN_mod_word",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_mod_mul =
+        if (( p_BN_mod_mul =
               GetProcAddress( hCRYPTO, "BN_mod_mul" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3540,7 +3540,7 @@
                    "BN_mod_mul",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_mod_exp =
+        if (( p_BN_mod_exp =
               GetProcAddress( hCRYPTO, "BN_mod_exp" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3548,7 +3548,7 @@
                    "BN_mod_exp",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_is_prime =
+        if (( p_BN_is_prime =
               GetProcAddress( hCRYPTO, "BN_is_prime" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3557,7 +3557,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_MD5_Final =
+        if (( p_MD5_Final =
               GetProcAddress( hCRYPTO, "MD5_Final" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3565,7 +3565,7 @@
                    "MD5_Final",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_MD5_Update =
+        if (( p_MD5_Update =
               GetProcAddress( hCRYPTO, "MD5_Update" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3573,7 +3573,7 @@
                    "MD5_Update",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_MD5_Init =
+        if (( p_MD5_Init =
               GetProcAddress( hCRYPTO, "MD5_Init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3581,7 +3581,7 @@
                    "MD5_Init",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_clear_free =
+        if (( p_BN_clear_free =
               GetProcAddress( hCRYPTO, "BN_clear_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3589,7 +3589,7 @@
                    "BN_clear_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_rshift1 =
+        if (( p_BN_rshift1 =
               GetProcAddress( hCRYPTO, "BN_rshift1" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3597,7 +3597,7 @@
                    "BN_rshift1",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BN_clear =
+        if (( p_BN_clear =
               GetProcAddress( hCRYPTO, "BN_clear" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3605,7 +3605,7 @@
                    "BN_clear",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_DigestFinal =
+        if (( p_EVP_DigestFinal =
               GetProcAddress( hCRYPTO, "EVP_DigestFinal" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3613,7 +3613,7 @@
                    "EVP_DigestFinal",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_DigestUpdate =
+        if (( p_EVP_DigestUpdate =
               GetProcAddress( hCRYPTO, "EVP_DigestUpdate" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3621,7 +3621,7 @@
                    "EVP_DigestUpdate",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_DigestInit =
+        if (( p_EVP_DigestInit =
               GetProcAddress( hCRYPTO, "EVP_DigestInit" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3629,7 +3629,7 @@
                    "EVP_DigestInit",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_sha1 =
+        if (( p_EVP_sha1 =
               GetProcAddress( hCRYPTO, "EVP_sha1" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3637,7 +3637,7 @@
                    "EVP_sha1",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_md5 =
+        if (( p_EVP_md5 =
               GetProcAddress( hCRYPTO, "EVP_md5" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3645,7 +3645,7 @@
                    "EVP_md5",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_des_ede3_cbc =
+        if (( p_EVP_des_ede3_cbc =
               GetProcAddress( hCRYPTO, "EVP_des_ede3_cbc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3653,7 +3653,7 @@
                    "EVP_des_ede3_cbc",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_PKEY_free =
+        if (( p_EVP_PKEY_free =
               GetProcAddress( hCRYPTO, "EVP_PKEY_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3661,7 +3661,7 @@
                    "EVP_PKEY_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_PKEY_get1_DSA =
+        if (( p_EVP_PKEY_get1_DSA =
               GetProcAddress( hCRYPTO, "EVP_PKEY_get1_DSA" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3669,7 +3669,7 @@
                    "EVP_PKEY_get1_DSA",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_PKEY_get1_RSA =
+        if (( p_EVP_PKEY_get1_RSA =
               GetProcAddress( hCRYPTO, "EVP_PKEY_get1_RSA" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3677,7 +3677,7 @@
                    "EVP_PKEY_get1_RSA",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_get_digestbyname =
+        if (( p_EVP_get_digestbyname =
               GetProcAddress( hCRYPTO, "EVP_get_digestbyname" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3685,7 +3685,7 @@
                    "EVP_get_digestbyname",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_ripemd160 =
+        if (( p_EVP_ripemd160 =
               GetProcAddress( hCRYPTO, "EVP_ripemd160" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3693,7 +3693,7 @@
                    "EVP_ripemd160",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_new =
+        if (( p_RSA_new =
               GetProcAddress( hCRYPTO, "RSA_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3701,7 +3701,7 @@
                    "RSA_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_public_encrypt =
+        if (( p_RSA_public_encrypt =
               GetProcAddress( hCRYPTO, "RSA_public_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3709,7 +3709,7 @@
                    "RSA_public_encrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_public_decrypt =
+        if (( p_RSA_public_decrypt =
               GetProcAddress( hCRYPTO, "RSA_public_decrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3717,7 +3717,7 @@
                    "RSA_public_decrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_private_encrypt =
+        if (( p_RSA_private_encrypt =
               GetProcAddress( hCRYPTO, "RSA_private_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3725,7 +3725,7 @@
                    "RSA_private_encrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_private_decrypt =
+        if (( p_RSA_private_decrypt =
               GetProcAddress( hCRYPTO, "RSA_private_decrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3733,7 +3733,7 @@
                    "RSA_private_decrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_sign =
+        if (( p_RSA_sign =
               GetProcAddress( hCRYPTO, "RSA_sign" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3741,7 +3741,7 @@
                    "RSA_sign",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_size =
+        if (( p_RSA_size =
               GetProcAddress( hCRYPTO, "RSA_size" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3749,7 +3749,7 @@
                    "RSA_size",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RSA_verify =
+        if (( p_RSA_verify =
               GetProcAddress( hCRYPTO, "RSA_verify" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3757,7 +3757,7 @@
                    "RSA_verify",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_new =
+        if (( p_DSA_new =
               GetProcAddress( hCRYPTO, "DSA_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3765,7 +3765,7 @@
                    "DSA_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_SIG_free =
+        if (( p_DSA_SIG_free =
               GetProcAddress( hCRYPTO, "DSA_SIG_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3773,7 +3773,7 @@
                    "DSA_SIG_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_do_sign =
+        if (( p_DSA_do_sign =
               GetProcAddress( hCRYPTO, "DSA_do_sign" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3781,7 +3781,7 @@
                    "DSA_do_sign",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_do_verify =
+        if (( p_DSA_do_verify =
               GetProcAddress( hCRYPTO, "DSA_do_verify" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3789,7 +3789,7 @@
                    "DSA_do_verify",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DSA_SIG_new =
+        if (( p_DSA_SIG_new =
               GetProcAddress( hCRYPTO, "DSA_SIG_new" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3797,21 +3797,21 @@
                    "DSA_SIG_new",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_HMAC_cleanup =
+        if (( p_HMAC_cleanup =
               GetProcAddress( hCRYPTO, "HMAC_cleanup" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "HMAC_cleanup",rc);
         }
-        if (((FARPROC) p_HMAC_CTX_cleanup =
+        if (( p_HMAC_CTX_cleanup =
               GetProcAddress( hCRYPTO, "HMAC_CTX_cleanup" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "HMAC_CTX_cleanup",rc);
         }
-        if (((FARPROC) p_HMAC_Final =
+        if (( p_HMAC_Final =
               GetProcAddress( hCRYPTO, "HMAC_Final" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3819,7 +3819,7 @@
                    "HMAC_Final",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_HMAC_Update =
+        if (( p_HMAC_Update =
               GetProcAddress( hCRYPTO, "HMAC_Update" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3827,7 +3827,7 @@
                    "HMAC_Update",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_HMAC_Init =
+        if (( p_HMAC_Init =
               GetProcAddress( hCRYPTO, "HMAC_Init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3835,7 +3835,7 @@
                    "HMAC_Init",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RAND_add =
+        if (( p_RAND_add =
               GetProcAddress( hCRYPTO, "RAND_add" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3843,7 +3843,7 @@
                    "RAND_add",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RAND_bytes =
+        if (( p_RAND_bytes =
               GetProcAddress( hCRYPTO, "RAND_bytes" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3851,13 +3851,13 @@
                    "RAND_bytes",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_des_set_key =
+        if (( p_des_set_key =
               GetProcAddress( hCRYPTO, "des_set_key" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "des_set_key",rc);
-            if (((FARPROC) p_des_set_key =
+            if (( p_des_set_key =
                   GetProcAddress( hCRYPTO, "_ossl_old_des_set_key" )) == NULL )
             {
                 rc = GetLastError() ;
@@ -3866,13 +3866,13 @@
                 load_error = 1;
             }
         }
-        if (((FARPROC) p_des_ncbc_encrypt =
+        if (( p_des_ncbc_encrypt =
               GetProcAddress( hCRYPTO, "des_ncbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "des_ncbc_encrypt",rc);
-            if (((FARPROC) p_des_ncbc_encrypt =
+            if (( p_des_ncbc_encrypt =
                   GetProcAddress( hCRYPTO, "_ossl_old_des_ncbc_encrypt" )) == NULL )
             {
                 rc = GetLastError() ;
@@ -3881,13 +3881,13 @@
                 load_error = 1;
             }
         }
-        if (((FARPROC) p_des_ede3_cbc_encrypt =
+        if (( p_des_ede3_cbc_encrypt =
               GetProcAddress( hCRYPTO, "des_ede3_cbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "des_ede3_cbc_encrypt",rc);
-            if (((FARPROC) p_des_ede3_cbc_encrypt =
+            if (( p_des_ede3_cbc_encrypt =
                   GetProcAddress( hCRYPTO, "_ossl_old_des_ede3_cbc_encrypt" )) == NULL )
             {
                 rc = GetLastError() ;
@@ -3896,7 +3896,7 @@
                 load_error = 1;
             }
         }
-        if (((FARPROC) p_BF_set_key =
+        if (( p_BF_set_key =
               GetProcAddress( hCRYPTO, "BF_set_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3904,7 +3904,7 @@
                    "BF_set_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_BF_cbc_encrypt =
+        if (( p_BF_cbc_encrypt =
               GetProcAddress( hCRYPTO, "BF_cbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3912,7 +3912,7 @@
                    "BF_cbc_encrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RC4_set_key =
+        if (( p_RC4_set_key =
               GetProcAddress( hCRYPTO, "RC4_set_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3920,7 +3920,7 @@
                    "RC4_set_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_RC4 =
+        if (( p_RC4 =
               GetProcAddress( hCRYPTO, "RC4" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3928,7 +3928,7 @@
                    "RC4",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CAST_set_key =
+        if (( p_CAST_set_key =
               GetProcAddress( hCRYPTO, "CAST_set_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3936,7 +3936,7 @@
                    "CAST_set_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CAST_cbc_encrypt =
+        if (( p_CAST_cbc_encrypt =
               GetProcAddress( hCRYPTO, "CAST_cbc_encrypt" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3944,7 +3944,7 @@
                    "CAST_cbc_encrypt",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_OBJ_nid2sn =
+        if (( p_OBJ_nid2sn =
               GetProcAddress( hCRYPTO, "OBJ_nid2sn" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3952,14 +3952,14 @@
                    "OBJ_nid2sn",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_OBJ_create =
+        if (( p_OBJ_create =
               GetProcAddress( hCRYPTO, "OBJ_create" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "OBJ_create",rc);
         }
-        if (((FARPROC) p_DH_compute_key =
+        if (( p_DH_compute_key =
               GetProcAddress( hCRYPTO, "DH_compute_key" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3967,7 +3967,7 @@
                    "DH_compute_key",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_DH_size =
+        if (( p_DH_size =
               GetProcAddress( hCRYPTO, "DH_size" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3975,7 +3975,7 @@
                    "DH_size",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_ERR_load_crypto_strings =
+        if (( p_ERR_load_crypto_strings =
               GetProcAddress( hCRYPTO, "ERR_load_crypto_strings" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3983,7 +3983,7 @@
                    "ERR_load_crypto_strings",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_CRYPTO_free =
+        if (( p_CRYPTO_free =
               GetProcAddress( hCRYPTO, "CRYPTO_free" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3991,7 +3991,7 @@
                    "CRYPTO_free",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_write_DSAPrivateKey =
+        if (( p_PEM_write_DSAPrivateKey =
               GetProcAddress( hCRYPTO, "PEM_write_DSAPrivateKey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -3999,7 +3999,7 @@
                    "PEM_write_DSAPrivateKey",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_write_RSAPrivateKey =
+        if (( p_PEM_write_RSAPrivateKey =
               GetProcAddress( hCRYPTO, "PEM_write_RSAPrivateKey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4007,7 +4007,7 @@
                    "PEM_write_RSAPrivateKey",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_write_bio_X509 =
+        if (( p_PEM_write_bio_X509 =
               GetProcAddress( hCRYPTO, "PEM_write_bio_X509" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4015,7 +4015,7 @@
                    "PEM_write_bio_X509",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_PEM_read_PrivateKey =
+        if (( p_PEM_read_PrivateKey =
               GetProcAddress( hCRYPTO, "PEM_read_PrivateKey" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4023,42 +4023,42 @@
                    "PEM_read_PrivateKey",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_X509_get_default_cert_dir_env =
+        if (( p_X509_get_default_cert_dir_env =
               GetProcAddress( hCRYPTO, "X509_get_default_cert_dir_env" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "X509_get_default_cert_dir_env",rc);
         }
-        if (((FARPROC) p_X509_get_default_cert_file_env =
+        if (( p_X509_get_default_cert_file_env =
               GetProcAddress( hCRYPTO, "X509_get_default_cert_file_env" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "X509_get_default_cert_file_env",rc);
         }
-        if (((FARPROC) p_OpenSSL_add_all_ciphers =
+        if (( p_OpenSSL_add_all_ciphers =
               GetProcAddress( hCRYPTO, "OpenSSL_add_all_ciphers" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "OpenSSL_add_all_ciphers",rc);
         }
-        if (((FARPROC) p_OpenSSL_add_all_digests =
+        if (( p_OpenSSL_add_all_digests =
               GetProcAddress( hCRYPTO, "OpenSSL_add_all_digests" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "OpenSSL_add_all_digests",rc);
         }
-        if (((FARPROC) p_OPENSSL_add_all_algorithms_noconf =
+        if (( p_OPENSSL_add_all_algorithms_noconf =
               GetProcAddress( hCRYPTO, "OPENSSL_add_all_algorithms_noconf" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "OPENSSL_add_all_algorithms_noconf",rc);
         }
-        if (((FARPROC) p_OPENSSL_add_all_algorithms_conf =
+        if (( p_OPENSSL_add_all_algorithms_conf =
               GetProcAddress( hCRYPTO, "OPENSSL_add_all_algorithms_conf" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4066,7 +4066,7 @@
                    "OPENSSL_add_all_algorithms_conf",rc);
         }
 
-        if (((FARPROC) p_RSA_blinding_on =
+        if (( p_RSA_blinding_on =
               GetProcAddress( hCRYPTO, "RSA_blinding_on" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4074,28 +4074,28 @@
                    "RSA_blinding_on",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_aes_256_cbc =
+        if (( p_EVP_aes_256_cbc =
               GetProcAddress( hCRYPTO, "EVP_aes_256_cbc" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "EVP_aes_256_cbc",rc);
         }
-        if (((FARPROC) p_EVP_aes_192_cbc =
+        if (( p_EVP_aes_192_cbc =
               GetProcAddress( hCRYPTO, "EVP_aes_192_cbc" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "EVP_aes_192_cbc",rc);
         }
-        if (((FARPROC) p_EVP_aes_128_cbc =
+        if (( p_EVP_aes_128_cbc =
               GetProcAddress( hCRYPTO, "EVP_aes_128_cbc" )) == NULL )
         {
             rc = GetLastError() ;
             debug(F111,"OpenSSL Crypto GetProcAddress failed",
                    "EVP_aes_128_cbc",rc);
         }
-        if (((FARPROC) p_EVP_rc4 =
+        if (( p_EVP_rc4 =
               GetProcAddress( hCRYPTO, "EVP_rc4" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4103,7 +4103,7 @@
                    "EVP_rc4",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_cast5_cbc =
+        if (( p_EVP_cast5_cbc =
               GetProcAddress( hCRYPTO, "EVP_cast5_cbc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4111,7 +4111,7 @@
                    "EVP_cast5_cbc",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_bf_cbc =
+        if (( p_EVP_bf_cbc =
               GetProcAddress( hCRYPTO, "EVP_bf_cbc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4119,7 +4119,7 @@
                    "EVP_bf_cbc",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_des_cbc =
+        if (( p_EVP_des_cbc =
               GetProcAddress( hCRYPTO, "EVP_des_cbc" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4127,7 +4127,7 @@
                    "EVP_des_cbc",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_enc_null =
+        if (( p_EVP_enc_null =
               GetProcAddress( hCRYPTO, "EVP_enc_null" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4135,7 +4135,7 @@
                    "EVP_enc_null",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_CipherInit =
+        if (( p_EVP_CipherInit =
               GetProcAddress( hCRYPTO, "EVP_CipherInit" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4143,7 +4143,7 @@
                    "EVP_CipherInit",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_CIPHER_CTX_init =
+        if (( p_EVP_CIPHER_CTX_init =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_init" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4151,7 +4151,7 @@
                    "EVP_CIPHER_CTX_init",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_CIPHER_CTX_cleanup =
+        if (( p_EVP_CIPHER_CTX_cleanup =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_cleanup" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4159,7 +4159,7 @@
                    "EVP_CIPHER_CTX_cleanup",rc);
             load_error = 1;
         }
-        if (((FARPROC) p_EVP_CIPHER_CTX_set_key_length =
+        if (( p_EVP_CIPHER_CTX_set_key_length =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_set_key_length" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4168,7 +4168,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_EVP_CIPHER_CTX_key_length =
+        if (( p_EVP_CIPHER_CTX_key_length =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_key_length" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4177,7 +4177,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_EVP_Cipher =
+        if (( p_EVP_Cipher =
               GetProcAddress( hCRYPTO, "EVP_Cipher" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4186,7 +4186,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_EVP_CIPHER_CTX_iv_length =
+        if (( p_EVP_CIPHER_CTX_iv_length =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_iv_length" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4195,7 +4195,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_EVP_CIPHER_CTX_get_app_data =
+        if (( p_EVP_CIPHER_CTX_get_app_data =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_get_app_data" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4204,7 +4204,7 @@
             load_error = 1;
         }
 
-        if (((FARPROC) p_EVP_CIPHER_CTX_set_app_data =
+        if (( p_EVP_CIPHER_CTX_set_app_data =
               GetProcAddress( hCRYPTO, "EVP_CIPHER_CTX_set_app_data" )) == NULL )
         {
             rc = GetLastError() ;
@@ -4218,7 +4218,7 @@
             return 0;
         }
     }
-    if (((FARPROC) p_EVP_MD_size =
+    if (( p_EVP_MD_size =
 	  GetProcAddress( hCRYPTO, "EVP_MD_size" )) == NULL )
     {
 	rc = GetLastError() ;
diff -Nruiw src.orig/ckozli.c src.farproc/ckozli.c
--- src.orig/ckozli.c	2011-07-19 17:16:33.000000000 -0400
+++ src.farproc/ckozli.c	2013-11-19 22:27:43.309128159 -0500
@@ -158,42 +158,42 @@
         return(0);
     }
 
-    if (((FARPROC) p_inflateInit_ =
+    if (( p_inflateInit_ =
           GetProcAddress( hZLIB, "inflateInit_" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"ZLIB GetProcAddress failed","inflateInit_",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_deflateInit_ =
+    if (( p_deflateInit_ =
           GetProcAddress( hZLIB, "deflateInit_" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"ZLIB GetProcAddress failed","deflateInit_",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_inflateEnd =
+    if (( p_inflateEnd =
           GetProcAddress( hZLIB, "inflateEnd" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"ZLIB GetProcAddress failed","inflateEnd",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_deflateEnd =
+    if (( p_deflateEnd =
           GetProcAddress( hZLIB, "deflateEnd" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"ZLIB GetProcAddress failed","deflateEnd",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_inflate =
+    if (( p_inflate =
           GetProcAddress( hZLIB, "inflate" )) == NULL )
     {
         rc = GetLastError() ;
         debug(F111,"ZLIB GetProcAddress failed","inflate",rc);
         load_error = 1;
     }
-    if (((FARPROC) p_deflate =
+    if (( p_deflate =
           GetProcAddress( hZLIB, "deflate" )) == NULL )
     {
         rc = GetLastError() ;
diff -Nruiw src.orig/k95inst.c src.farproc/k95inst.c
--- src.orig/k95inst.c	2002-01-03 17:24:00.000000000 -0500
+++ src.farproc/k95inst.c	2013-11-19 22:27:43.564128166 -0500
@@ -1102,175 +1102,175 @@
       return FALSE;
    }
 
-   if (((FARPROC) cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
+   if (( cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
+   if (( cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
+   if (( cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
+   if (( cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
+   if (( cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
+   if (( cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
+   if (( cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
+   if (( cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-    if (((FARPROC) cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
+    if (( cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
     {
 	rc = GetLastError() ;
         return FALSE;
     }
-    if (((FARPROC) cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
+    if (( cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
+    if (( cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
+    if (( cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
+   if (( cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
+   if (( cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
+   if (( cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
+   if (( cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
    {
       rc = GetLastError() ;
       return FALSE;
    }
-    if (((FARPROC) cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
+    if (( cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
+    if (( cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineTranslateAddress = 
+    if (( cklineTranslateAddress = 
 	  GetProcAddress( hLib, "lineTranslateAddress" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetCountry = 
+    if (( cklineGetCountry = 
 	  GetProcAddress( hLib, "lineGetCountry" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetLineDevStatus = 
+    if (( cklineGetLineDevStatus = 
 	  GetProcAddress( hLib, "lineGetLineDevStatus" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetDevConfig = 
+    if (( cklineGetDevConfig = 
 	  GetProcAddress( hLib, "lineGetDevConfig" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetDevConfig = 
+    if (( cklineSetDevConfig = 
 	  GetProcAddress( hLib, "lineSetDevConfig" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineHandoff = 
+    if (( cklineHandoff = 
 	  GetProcAddress( hLib, "lineHandoff" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetCallPrivilege = 
+    if (( cklineSetCallPrivilege = 
 	  GetProcAddress( hLib, "lineSetCallPrivilege" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetCallInfo = 
+    if (( cklineGetCallInfo = 
 	  GetProcAddress( hLib, "lineGetCallInfo" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineMonitorMedia = 
+    if (( cklineMonitorMedia = 
 	  GetProcAddress( hLib, "lineMonitorMedia" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetAppPriority = 
+    if (( cklineGetAppPriority = 
 	  GetProcAddress( hLib, "lineGetAppPriority" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetAppPriority = 
+    if (( cklineSetAppPriority = 
 	  GetProcAddress( hLib, "lineSetAppPriority" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetNumRings = 
+    if (( cklineGetNumRings = 
 	  GetProcAddress( hLib, "lineGetNumRings" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetNumRings = 
+    if (( cklineSetNumRings = 
 	  GetProcAddress( hLib, "lineSetNumRings" )) == NULL )
     {
 	rc = GetLastError() ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetCallParams = 
+    if (( cklineSetCallParams = 
 	  GetProcAddress( hLib, "lineSetCallParams" )) == NULL )
     {
 	rc = GetLastError() ;
diff -Nruiw src.orig/settapi.c src.farproc/settapi.c
--- src.orig/settapi.c	2011-07-19 17:16:59.000000000 -0400
+++ src.farproc/settapi.c	2013-11-19 22:27:43.572128166 -0500
@@ -147,206 +147,206 @@
       return FALSE;
    }
 
-   if (((FARPROC) cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
+   if (( cklineInitialize = GetProcAddress( hLib, "lineInitialize" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
+   if (( cklineNegotiateAPIVersion = GetProcAddress( hLib, "lineNegotiateAPIVersion" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
+   if (( cklineGetDevCaps = GetProcAddress( hLib, "lineGetDevCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
+   if (( cklineShutdown = GetProcAddress( hLib, "lineShutdown" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
+   if (( cklineOpen = GetProcAddress( hLib, "lineOpen" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
+   if (( cklineMakeCall = GetProcAddress( hLib, "lineMakeCall" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
+   if (( cklineDial = GetProcAddress( hLib, "lineDial" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
+   if (( cklineDrop = GetProcAddress( hLib, "lineDrop" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-    if (((FARPROC) cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
+    if (( cklineAnswer = GetProcAddress( hLib, "lineAnswer" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
+    if (( cklineAccept = GetProcAddress( hLib, "lineAccept" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
+    if (( cklineDeallocateCall = GetProcAddress( hLib, "lineDeallocateCall" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
+    if (( cklineClose = GetProcAddress( hLib, "lineClose" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
+   if (( cklineGetID = GetProcAddress( hLib, "lineGetID" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
+   if (( cklineGetTranslateCaps = GetProcAddress( hLib, "lineGetTranslateCaps" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
+   if (( cklineSetCurrentLocation = GetProcAddress( hLib, "lineSetCurrentLocation" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-   if (((FARPROC) cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
+   if (( cklineSetStatusMessages = GetProcAddress( hLib, "lineSetStatusMessages" )) == NULL )
    {
       rc = GetLastError() ;
       debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
       return FALSE;
    }
-    if (((FARPROC) cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
+    if (( cklineConfigDialog = GetProcAddress( hLib, "lineConfigDialog" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
+    if (( cklineTranslateDialog = GetProcAddress( hLib, "lineTranslateDialog" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineTranslateAddress = 
+    if (( cklineTranslateAddress = 
 	  GetProcAddress( hLib, "lineTranslateAddress" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetCountry = 
+    if (( cklineGetCountry = 
 	  GetProcAddress( hLib, "lineGetCountry" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetLineDevStatus = 
+    if (( cklineGetLineDevStatus = 
 	  GetProcAddress( hLib, "lineGetLineDevStatus" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetDevConfig = 
+    if (( cklineGetDevConfig = 
 	  GetProcAddress( hLib, "lineGetDevConfig" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetDevConfig = 
+    if (( cklineSetDevConfig = 
 	  GetProcAddress( hLib, "lineSetDevConfig" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineHandoff = 
+    if (( cklineHandoff = 
 	  GetProcAddress( hLib, "lineHandoff" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetCallPrivilege = 
+    if (( cklineSetCallPrivilege = 
 	  GetProcAddress( hLib, "lineSetCallPrivilege" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetCallInfo = 
+    if (( cklineGetCallInfo = 
 	  GetProcAddress( hLib, "lineGetCallInfo" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineMonitorMedia = 
+    if (( cklineMonitorMedia = 
 	  GetProcAddress( hLib, "lineMonitorMedia" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetAppPriority = 
+    if (( cklineGetAppPriority = 
 	  GetProcAddress( hLib, "lineGetAppPriority" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetAppPriority = 
+    if (( cklineSetAppPriority = 
 	  GetProcAddress( hLib, "lineSetAppPriority" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineGetNumRings = 
+    if (( cklineGetNumRings = 
 	  GetProcAddress( hLib, "lineGetNumRings" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetNumRings = 
+    if (( cklineSetNumRings = 
 	  GetProcAddress( hLib, "lineSetNumRings" )) == NULL )
     {
 	rc = GetLastError() ;
 	debug(F111, "cktapiload LoadLibrary failed","tapi32",rc) ;
 	return FALSE;
     }
-    if (((FARPROC) cklineSetCallParams = 
+    if (( cklineSetCallParams = 
 	  GetProcAddress( hLib, "lineSetCallParams" )) == NULL )
     {
 	rc = GetLastError() ;
